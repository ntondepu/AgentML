{"ast":null,"code":"var _jsxFileName = \"/Users/ntondepu/AgentML/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Layout, Menu, Card, Row, Col, Statistic, Badge, Button, Space, Tabs, Progress, Table, Form, Input, Select, Modal } from 'antd';\nimport { DashboardOutlined, RobotOutlined, ClusterOutlined, MessageOutlined, BarChartOutlined, SettingOutlined, PlayCircleOutlined, SyncOutlined, ExperimentOutlined, ThunderboltOutlined, MonitorOutlined, AlertOutlined, DatabaseOutlined } from '@ant-design/icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Sider\n} = Layout;\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\nfunction App() {\n  _s();\n  const [selectedKey, setSelectedKey] = useState('dashboard');\n  const [loading, setLoading] = useState(false);\n\n  // Enterprise ML Pipeline State\n  const [mlPipelines, setMlPipelines] = useState([]);\n  const [mlflowExperiments, setMlflowExperiments] = useState([]);\n  const [modelMetrics, setModelMetrics] = useState({});\n\n  // Distributed Systems State\n  const [raftNodes, setRaftNodes] = useState([]);\n  const [raftMetrics, setRaftMetrics] = useState({});\n  const [performanceMetrics, setPerformanceMetrics] = useState({});\n\n  // AI Chatbot State\n  const [chatMessages, setChatMessages] = useState([{\n    sender: 'assistant',\n    text: 'Enterprise AutoML Platform ready. I can help with ML operations, distributed systems, and performance analytics.'\n  }]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [chatLoading, setChatLoading] = useState(false);\n  const [vectorDbStats, setVectorDbStats] = useState({});\n\n  // Monitoring State\n  const [prometheusMetrics, setPrometheusMetrics] = useState({});\n  const [alertsData, setAlertsData] = useState([]);\n  const [telemetryData, setTelemetryData] = useState({});\n\n  // Modal states\n  const [createPipelineModal, setCreatePipelineModal] = useState(false);\n\n  // Enterprise ML Pipeline Data Fetching\n  useEffect(() => {\n    async function fetchEnterpriseMLData() {\n      try {\n        const [pipelinesRes, experimentsRes, modelsRes] = await Promise.all([fetch('http://localhost:8000/api/ml/pipelines'), fetch('http://localhost:8000/api/ml/experiments'), fetch('http://localhost:8000/api/ml/models')]);\n        const [pipelines, experiments, models] = await Promise.all([pipelinesRes.json().catch(() => []), experimentsRes.json().catch(() => []), modelsRes.json().catch(() => [])]);\n\n        // Enhance pipelines with enterprise features\n        const enhancedPipelines = pipelines.length ? pipelines.map(p => ({\n          id: p.id,\n          name: p.name || `Pipeline ${p.id}`,\n          status: p.status,\n          progress: p.progress || Math.floor(Math.random() * 40) + 60,\n          hyperparamOptimization: {\n            method: 'Bayesian',\n            iterations: Math.floor(Math.random() * 50) + 20,\n            bestParams: {\n              learning_rate: 0.01,\n              n_estimators: 100\n            },\n            improvement: Math.random() * 0.2 + 0.05\n          },\n          anomalyDetection: {\n            enabled: true,\n            anomaliesFound: Math.floor(Math.random() * 10),\n            dataQualityScore: Math.floor(Math.random() * 20) + 80\n          },\n          ensembleMethods: ['Random Forest', 'XGBoost', 'Neural Network'],\n          abTestingEnabled: true,\n          accuracy: Math.random() * 0.3 + 0.7,\n          deploymentStatus: ['development', 'staging', 'production'][Math.floor(Math.random() * 3)],\n          mlflowExperimentId: `exp_${p.id}`\n        })) : [{\n          id: 1,\n          name: 'Customer Churn Prediction',\n          status: 'running',\n          progress: 75,\n          hyperparamOptimization: {\n            method: 'Bayesian',\n            iterations: 45,\n            improvement: 0.12\n          },\n          anomalyDetection: {\n            enabled: true,\n            anomaliesFound: 3,\n            dataQualityScore: 94\n          },\n          ensembleMethods: ['Random Forest', 'XGBoost'],\n          abTestingEnabled: true,\n          accuracy: 0.87,\n          deploymentStatus: 'production'\n        }, {\n          id: 2,\n          name: 'Fraud Detection',\n          status: 'optimizing',\n          progress: 60,\n          hyperparamOptimization: {\n            method: 'Grid Search',\n            iterations: 100,\n            improvement: 0.18\n          },\n          anomalyDetection: {\n            enabled: true,\n            anomaliesFound: 12,\n            dataQualityScore: 91\n          },\n          ensembleMethods: ['Neural Network', 'SVM'],\n          abTestingEnabled: true,\n          accuracy: 0.94,\n          deploymentStatus: 'staging'\n        }];\n        setMlPipelines(enhancedPipelines);\n        setMlflowExperiments(experiments);\n      } catch (e) {\n        console.error('Failed to fetch enterprise ML data:', e);\n      }\n    }\n    fetchEnterpriseMLData();\n    const interval = setInterval(fetchEnterpriseMLData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Distributed Systems Data Fetching\n  useEffect(() => {\n    async function fetchDistributedSystemsData() {\n      setLoading(true);\n      try {\n        const [nodesRes, metricsRes] = await Promise.all([fetch('http://localhost:8000/api/distributed/nodes'), fetch('http://localhost:8000/api/distributed/metrics')]);\n        const [nodesData, metricsData] = await Promise.all([nodesRes.json().catch(() => ({\n          nodes: []\n        })), metricsRes.json().catch(() => ({}))]);\n\n        // Enhanced nodes with enterprise features\n        const enhancedNodes = (nodesData.nodes || []).length ? nodesData.nodes.map(node => ({\n          ...node,\n          faultInjection: {\n            networkPartitionEnabled: Math.random() > 0.8,\n            latencySimulation: Math.floor(Math.random() * 100) + 10,\n            failureSimulation: Math.random() > 0.9\n          },\n          performanceMetrics: {\n            throughput: Math.floor(Math.random() * 1000) + 500,\n            latency: Math.floor(Math.random() * 50) + 10,\n            consensusTime: Math.floor(Math.random() * 200) + 50\n          }\n        })) : Array.from({\n          length: 5\n        }, (_, i) => ({\n          node_id: `node_${i}`,\n          role: i === 0 ? 'LEADER' : 'FOLLOWER',\n          status: Math.random() > 0.1 ? 'RUNNING' : 'STOPPED',\n          is_partitioned: Math.random() > 0.8,\n          faultInjection: {\n            networkPartitionEnabled: Math.random() > 0.7,\n            latencySimulation: Math.floor(Math.random() * 100) + 10\n          },\n          performanceMetrics: {\n            throughput: Math.floor(Math.random() * 1000) + 500,\n            latency: Math.floor(Math.random() * 50) + 10\n          }\n        }));\n        setRaftNodes(enhancedNodes);\n        setRaftMetrics(metricsData);\n      } catch (e) {\n        console.error('Failed to fetch distributed systems data:', e);\n      }\n      setLoading(false);\n    }\n    fetchDistributedSystemsData();\n    const interval = setInterval(fetchDistributedSystemsData, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Monitoring Data Fetching\n  useEffect(() => {\n    async function fetchMonitoringData() {\n      try {\n        const [metricsRes, alertsRes, telemetryRes] = await Promise.all([fetch('http://localhost:8000/metrics'), fetch('http://localhost:8000/api/monitoring/alerts'), fetch('http://localhost:8000/api/telemetry/traces')]);\n        const [metrics, alerts, telemetry] = await Promise.all([metricsRes.text().catch(() => ''), alertsRes.json().catch(() => []), telemetryRes.json().catch(() => ({}))]);\n        setPrometheusMetrics({\n          raw: metrics\n        });\n        setAlertsData(alerts);\n        setTelemetryData(telemetry);\n      } catch (e) {\n        console.error('Failed to fetch monitoring data:', e);\n      }\n    }\n    fetchMonitoringData();\n    const interval = setInterval(fetchMonitoringData, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Chatbot and Vector DB Data Fetching\n  useEffect(() => {\n    async function fetchChatbotData() {\n      try {\n        const vectorRes = await fetch('http://localhost:8000/api/chatbot/vector-stats');\n        const vectorData = await vectorRes.json().catch(() => ({\n          totalVectors: Math.floor(Math.random() * 10000) + 5000,\n          dimensions: 384,\n          indexSize: '2.3GB',\n          queryLatency: Math.floor(Math.random() * 50) + 10\n        }));\n        setVectorDbStats(vectorData);\n      } catch (e) {\n        console.error('Failed to fetch chatbot data:', e);\n        setVectorDbStats({\n          totalVectors: Math.floor(Math.random() * 10000) + 5000,\n          dimensions: 384,\n          indexSize: '2.3GB',\n          queryLatency: Math.floor(Math.random() * 50) + 10\n        });\n      }\n    }\n    fetchChatbotData();\n    const interval = setInterval(fetchChatbotData, 15000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Enterprise ML Operations\n  const createPipeline = async values => {\n    try {\n      const response = await fetch('http://localhost:8000/api/ml/pipelines', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      console.log('Pipeline created:', result);\n      setCreatePipelineModal(false);\n    } catch (e) {\n      console.error('Failed to create pipeline:', e);\n    }\n  };\n  const optimizeHyperparameters = async pipelineId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/ml/pipelines/${pipelineId}/optimize`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          method: 'bayesian',\n          iterations: 50\n        })\n      });\n      const result = await response.json();\n      console.log('Hyperparameter optimization started:', result);\n    } catch (e) {\n      console.error('Failed to optimize hyperparameters:', e);\n    }\n  };\n  const deployModel = async modelId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/ml/models/${modelId}/deploy`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          environment: 'production'\n        })\n      });\n      const result = await response.json();\n      console.log('Model deployed:', result);\n    } catch (e) {\n      console.error('Failed to deploy model:', e);\n    }\n  };\n\n  // Distributed Systems Operations\n  const triggerElection = async () => {\n    try {\n      await fetch('http://localhost:8000/api/distributed/trigger-election', {\n        method: 'POST'\n      });\n    } catch (e) {\n      console.error('Failed to trigger election:', e);\n    }\n  };\n  const injectFailure = async nodeId => {\n    try {\n      await fetch(`http://localhost:8000/api/distributed/inject-failure/${nodeId}`, {\n        method: 'POST'\n      });\n    } catch (e) {\n      console.error('Failed to inject failure:', e);\n    }\n  };\n  const addNode = async () => {\n    try {\n      await fetch('http://localhost:8000/api/distributed/add-node', {\n        method: 'POST'\n      });\n    } catch (e) {\n      console.error('Failed to add node:', e);\n    }\n  };\n  const benchmarkPerformance = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/distributed/benchmark', {\n        method: 'POST'\n      });\n      const result = await response.json();\n      console.log('Benchmark started:', result);\n    } catch (e) {\n      console.error('Failed to start benchmark:', e);\n    }\n  };\n\n  // Chatbot Operations\n  const sendMessage = async () => {\n    if (!chatInput.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: chatInput\n    };\n    setChatMessages(msgs => [...msgs, userMsg]);\n    setChatLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/chatbot/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: chatInput\n        })\n      });\n      const data = await response.json();\n      setChatMessages(msgs => [...msgs, {\n        sender: 'assistant',\n        text: data.response || data.message || 'Response received'\n      }]);\n    } catch (e) {\n      console.error('Chatbot error:', e);\n      setChatMessages(msgs => [...msgs, {\n        sender: 'assistant',\n        text: 'Sorry, there was an error contacting the chatbot.'\n      }]);\n    }\n    setChatInput(\"\");\n    setChatLoading(false);\n  };\n  const executeMLCommand = async command => {\n    try {\n      const response = await fetch('http://localhost:8000/api/chatbot/ml-command', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          command\n        })\n      });\n      const result = await response.json();\n      setChatMessages(msgs => [...msgs, {\n        sender: 'assistant',\n        text: `Executed: ${command}. Result: ${JSON.stringify(result)}`\n      }]);\n    } catch (e) {\n      console.error('Failed to execute ML command:', e);\n    }\n  };\n  const menuItems = [{\n    key: 'dashboard',\n    icon: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 31\n    }, this),\n    label: 'Dashboard'\n  }, {\n    key: 'ml-pipeline',\n    icon: /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }, this),\n    label: 'ML Pipeline'\n  }, {\n    key: 'distributed',\n    icon: /*#__PURE__*/_jsxDEV(ClusterOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 33\n    }, this),\n    label: 'Distributed Sim'\n  }, {\n    key: 'chatbot',\n    icon: /*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }, this),\n    label: 'AI Chatbot'\n  }, {\n    key: 'monitoring',\n    icon: /*#__PURE__*/_jsxDEV(BarChartOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 32\n    }, this),\n    label: 'Monitoring'\n  }, {\n    key: 'settings',\n    icon: /*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 30\n    }, this),\n    label: 'Settings'\n  }];\n  const renderDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      style: {\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"Active ML Pipelines\",\n            value: mlPipelines.filter(p => p.status === 'running').length,\n            prefix: /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 23\n            }, this),\n            valueStyle: {\n              color: '#3f8600'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"Distributed Nodes\",\n            value: `${raftNodes.filter(n => n.status === 'RUNNING').length}/${raftNodes.length}`,\n            prefix: /*#__PURE__*/_jsxDEV(ClusterOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 23\n            }, this),\n            valueStyle: {\n              color: '#1890ff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"Vector DB Size\",\n            value: vectorDbStats.totalVectors || 0,\n            prefix: /*#__PURE__*/_jsxDEV(DatabaseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 23\n            }, this),\n            valueStyle: {\n              color: '#722ed1'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Statistic, {\n            title: \"System Health\",\n            value: \"98.5%\",\n            suffix: \"%\",\n            prefix: /*#__PURE__*/_jsxDEV(MonitorOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 23\n            }, this),\n            valueStyle: {\n              color: '#52c41a'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"ML Pipeline Status\",\n          extra: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 65\n            }, this),\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 51\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pipeline-list\",\n            children: mlPipelines.map(pipeline => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pipeline-item\",\n              style: {\n                marginBottom: 16,\n                padding: 12,\n                border: '1px solid #f0f0f0',\n                borderRadius: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: pipeline.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  status: pipeline.status === 'running' ? 'processing' : pipeline.status === 'completed' ? 'success' : 'default',\n                  text: pipeline.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Progress, {\n                percent: pipeline.progress,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 12,\n                  color: '#666',\n                  marginTop: 4\n                },\n                children: [\"Accuracy: \", (pipeline.accuracy * 100).toFixed(1), \"% | Method: \", pipeline.hyperparamOptimization.method, \" | Status: \", pipeline.deploymentStatus]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)]\n            }, pipeline.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Distributed Cluster\",\n          extra: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(PlayCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 66\n            }, this),\n            onClick: triggerElection,\n            children: \"Trigger Election\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 52\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n              gap: 8\n            },\n            children: raftNodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: node.role === 'LEADER' ? '#ffe58f' : node.status === 'RUNNING' ? '#e6f7ff' : '#fff1f0',\n                border: node.role === 'LEADER' ? '2px solid #faad14' : '1px solid #d9d9d9',\n                padding: 8,\n                borderRadius: 6,\n                textAlign: 'center',\n                fontSize: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: node.node_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: node.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                status: node.status === 'RUNNING' ? 'success' : 'error',\n                text: node.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), node.is_partitioned && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red',\n                  fontSize: 12\n                },\n                children: \"Partitioned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 43\n              }, this)]\n            }, node.node_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n  const renderMLPipeline = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Enterprise ML Pipeline Management\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setCreatePipelineModal(true),\n        children: \"Create Pipeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 20\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"pipelines\",\n        children: [/*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Active Pipelines\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: mlPipelines,\n            columns: [{\n              title: 'Name',\n              dataIndex: 'name',\n              key: 'name'\n            }, {\n              title: 'Status',\n              dataIndex: 'status',\n              key: 'status',\n              render: status => /*#__PURE__*/_jsxDEV(Badge, {\n                status: status === 'running' ? 'processing' : 'success',\n                text: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 39\n              }, this)\n            }, {\n              title: 'Progress',\n              dataIndex: 'progress',\n              key: 'progress',\n              render: progress => /*#__PURE__*/_jsxDEV(Progress, {\n                percent: progress,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 41\n              }, this)\n            }, {\n              title: 'Accuracy',\n              dataIndex: 'accuracy',\n              key: 'accuracy',\n              render: acc => `${(acc * 100).toFixed(1)}%`\n            }, {\n              title: 'Deployment',\n              dataIndex: 'deploymentStatus',\n              key: 'deployment'\n            }, {\n              title: 'Actions',\n              key: 'actions',\n              render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => optimizeHyperparameters(record.id),\n                  children: \"Optimize\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  type: \"primary\",\n                  onClick: () => deployModel(record.id),\n                  children: \"Deploy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 21\n              }, this)\n            }],\n            pagination: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)\n        }, \"pipelines\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Hyperparameter Optimization\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: mlPipelines.map(pipeline => /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                marginBottom: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: pipeline.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Method: \", pipeline.hyperparamOptimization.method]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Iterations: \", pipeline.hyperparamOptimization.iterations]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Improvement: \", (pipeline.hyperparamOptimization.improvement * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Progress, {\n                percent: pipeline.hyperparamOptimization.iterations / 100 * 100,\n                format: () => `${pipeline.hyperparamOptimization.iterations}/100`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this)]\n            }, pipeline.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)\n        }, \"hyperparams\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"A/B Testing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: mlPipelines.filter(p => p.abTestingEnabled).map(pipeline => /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                marginBottom: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [pipeline.name, \" - A/B Test\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                gutter: 16,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    size: \"small\",\n                    title: \"Variant A\",\n                    children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"Conversion Rate\",\n                      value: \"12.3%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"Traffic Split\",\n                      value: \"50%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    size: \"small\",\n                    title: \"Variant B\",\n                    children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"Conversion Rate\",\n                      value: \"14.7%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"Traffic Split\",\n                      value: \"50%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 16\n                },\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  status: \"success\",\n                  text: \"Statistical Significance: 95%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)]\n            }, pipeline.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)\n        }, \"abtesting\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Create New ML Pipeline\",\n      open: createPipelineModal,\n      onCancel: () => setCreatePipelineModal(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: createPipeline,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"name\",\n          label: \"Pipeline Name\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter pipeline name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"dataset\",\n          label: \"Dataset\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select dataset\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"churn_dataset\",\n              children: \"Customer Churn Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"fraud_dataset\",\n              children: \"Fraud Detection Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"recommendation_dataset\",\n              children: \"Recommendation Dataset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"algorithm\",\n          label: \"Algorithm\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select algorithm\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"random_forest\",\n              children: \"Random Forest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"xgboost\",\n              children: \"XGBoost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"neural_network\",\n              children: \"Neural Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create Pipeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n  const renderDistributedSim = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Enterprise Distributed Systems Simulation\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          lg: 16,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Cluster Visualization\",\n            className: \"cluster-viz\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n                gap: 16\n              },\n              children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 28\n              }, this) : raftNodes.map(node => /*#__PURE__*/_jsxDEV(Card, {\n                size: \"small\",\n                style: {\n                  background: node.role === 'LEADER' ? '#ffe58f' : node.status === 'RUNNING' ? '#e6f7ff' : '#fff1f0',\n                  border: node.role === 'LEADER' ? '2px solid #faad14' : '1px solid #d9d9d9'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: node.node_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: node.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                    status: node.status === 'RUNNING' ? 'success' : 'error',\n                    text: node.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 25\n                  }, this), node.is_partitioned && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: 'red',\n                      fontSize: 12\n                    },\n                    children: \"Partitioned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 49\n                  }, this), node.performanceMetrics && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: 11,\n                      marginTop: 8\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Throughput: \", node.performanceMetrics.throughput, \"/s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [\"Latency: \", node.performanceMetrics.latency, \"ms\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    danger: true,\n                    style: {\n                      marginTop: 8\n                    },\n                    onClick: () => injectFailure(node.node_id),\n                    children: \"Inject Failure\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 23\n                }, this)\n              }, node.node_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          lg: 8,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            title: \"Controls\",\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"vertical\",\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                icon: /*#__PURE__*/_jsxDEV(PlayCircleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 37\n                }, this),\n                onClick: triggerElection,\n                children: \"Trigger Election\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 37\n                }, this),\n                onClick: addNode,\n                children: \"Add Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                icon: /*#__PURE__*/_jsxDEV(ExperimentOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 37\n                }, this),\n                onClick: benchmarkPerformance,\n                children: \"Benchmark Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                icon: /*#__PURE__*/_jsxDEV(AlertOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 37\n                }, this),\n                onClick: () => injectFailure('random'),\n                children: \"Inject Random Failure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Performance Metrics\",\n            style: {\n              marginTop: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Consensus Time\",\n              value: performanceMetrics.consensusTime || 120,\n              suffix: \"ms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Throughput\",\n              value: performanceMetrics.throughput || 850,\n              suffix: \"ops/s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Network Latency\",\n              value: performanceMetrics.latency || 25,\n              suffix: \"ms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n  const renderChatbot = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Enterprise AI Chatbot with RAG\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          lg: 16,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Chat Interface\",\n            className: \"chat-interface\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                minHeight: 400,\n                maxHeight: 500,\n                overflowY: 'auto',\n                marginBottom: 16,\n                padding: 16,\n                background: '#fafafa',\n                borderRadius: 6\n              },\n              children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: msg.sender === 'user' ? 'right' : 'left',\n                  margin: '12px 0'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'inline-block',\n                    background: msg.sender === 'user' ? '#1890ff' : '#f0f0f0',\n                    color: msg.sender === 'user' ? 'white' : 'black',\n                    padding: '8px 12px',\n                    borderRadius: 12,\n                    maxWidth: '70%'\n                  },\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: chatInput,\n                onChange: e => setChatInput(e.target.value),\n                onPressEnter: sendMessage,\n                placeholder: \"Ask about ML pipelines, distributed systems, or performance...\",\n                disabled: chatLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: sendMessage,\n                loading: chatLoading,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 8\n                },\n                children: \"Quick Actions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Space, {\n                wrap: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => executeMLCommand('status'),\n                  children: \"Get ML Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => executeMLCommand('accuracy'),\n                  children: \"Latest Accuracy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => executeMLCommand('deploy'),\n                  children: \"Deploy Best Model\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          lg: 8,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            title: \"Vector Database Stats\",\n            children: [/*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Total Vectors\",\n              value: vectorDbStats.totalVectors || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Dimensions\",\n              value: vectorDbStats.dimensions || 384\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Index Size\",\n              value: vectorDbStats.indexSize || '2.3GB'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"Query Latency\",\n              value: vectorDbStats.queryLatency || 15,\n              suffix: \"ms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            title: \"RAG Configuration\",\n            style: {\n              marginTop: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Retrieval:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 20\n                }, this), \" FAISS Vector Search\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Generation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 20\n                }, this), \" GPT-4 Turbo\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Context Window:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 20\n                }, this), \" 8,192 tokens\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Similarity Threshold:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 20\n                }, this), \" 0.8\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 652,\n    columnNumber: 5\n  }, this);\n  const renderMonitoring = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Enterprise Monitoring Dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"metrics\",\n        children: [/*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Prometheus Metrics\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"API Requests\",\n                  value: 2847,\n                  prefix: /*#__PURE__*/_jsxDEV(BarChartOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 72\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"Error Rate\",\n                  value: 0.5,\n                  suffix: \"%\",\n                  valueStyle: {\n                    color: '#52c41a'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"Avg Response Time\",\n                  value: 120,\n                  suffix: \"ms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)\n        }, \"metrics\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"OpenTelemetry Traces\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: [{\n              id: 1,\n              operation: 'ml_pipeline_execution',\n              duration: '1.2s',\n              status: 'success'\n            }, {\n              id: 2,\n              operation: 'raft_consensus',\n              duration: '45ms',\n              status: 'success'\n            }, {\n              id: 3,\n              operation: 'vector_search',\n              duration: '15ms',\n              status: 'success'\n            }],\n            columns: [{\n              title: 'Operation',\n              dataIndex: 'operation',\n              key: 'operation'\n            }, {\n              title: 'Duration',\n              dataIndex: 'duration',\n              key: 'duration'\n            }, {\n              title: 'Status',\n              dataIndex: 'status',\n              key: 'status',\n              render: status => /*#__PURE__*/_jsxDEV(Badge, {\n                status: \"success\",\n                text: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 39\n              }, this)\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)\n        }, \"traces\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Alerts\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: alertsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                padding: 32\n              },\n              children: [/*#__PURE__*/_jsxDEV(AlertOutlined, {\n                style: {\n                  fontSize: 48,\n                  color: '#52c41a'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"No Active Alerts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"All systems operating normally\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this) : alertsData.map(alert => /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                marginBottom: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: alert.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: alert.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                status: \"error\",\n                text: alert.severity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 21\n              }, this)]\n            }, alert.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)\n        }, \"alerts\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 737,\n    columnNumber: 5\n  }, this);\n  const renderContent = () => {\n    switch (selectedKey) {\n      case 'dashboard':\n        return renderDashboard();\n      case 'ml-pipeline':\n        return renderMLPipeline();\n      case 'distributed':\n        return renderDistributedSim();\n      case 'chatbot':\n        return renderChatbot();\n      case 'monitoring':\n        return renderMonitoring();\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Coming soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        background: '#001529',\n        padding: '0 24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          fontSize: 18,\n          fontWeight: 'bold'\n        },\n        children: \"\\uD83D\\uDE80 Enterprise AutoML Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Sider, {\n        width: 200,\n        style: {\n          background: '#fff'\n        },\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          mode: \"inline\",\n          selectedKeys: [selectedKey],\n          style: {\n            height: '100%',\n            borderRight: 0\n          },\n          items: menuItems,\n          onClick: ({\n            key\n          }) => setSelectedKey(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        style: {\n          padding: '24px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          style: {\n            padding: 24,\n            margin: 0,\n            minHeight: 280,\n            background: '#fff',\n            borderRadius: 6\n          },\n          children: renderContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 819,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DcFh2hw3tW3YqlUWwEPJu1q6dQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Layout","Menu","Card","Row","Col","Statistic","Badge","Button","Space","Tabs","Progress","Table","Form","Input","Select","Modal","DashboardOutlined","RobotOutlined","ClusterOutlined","MessageOutlined","BarChartOutlined","SettingOutlined","PlayCircleOutlined","SyncOutlined","ExperimentOutlined","ThunderboltOutlined","MonitorOutlined","AlertOutlined","DatabaseOutlined","jsxDEV","_jsxDEV","Header","Content","Sider","TabPane","Option","App","_s","selectedKey","setSelectedKey","loading","setLoading","mlPipelines","setMlPipelines","mlflowExperiments","setMlflowExperiments","modelMetrics","setModelMetrics","raftNodes","setRaftNodes","raftMetrics","setRaftMetrics","performanceMetrics","setPerformanceMetrics","chatMessages","setChatMessages","sender","text","chatInput","setChatInput","chatLoading","setChatLoading","vectorDbStats","setVectorDbStats","prometheusMetrics","setPrometheusMetrics","alertsData","setAlertsData","telemetryData","setTelemetryData","createPipelineModal","setCreatePipelineModal","fetchEnterpriseMLData","pipelinesRes","experimentsRes","modelsRes","Promise","all","fetch","pipelines","experiments","models","json","catch","enhancedPipelines","length","map","p","id","name","status","progress","Math","floor","random","hyperparamOptimization","method","iterations","bestParams","learning_rate","n_estimators","improvement","anomalyDetection","enabled","anomaliesFound","dataQualityScore","ensembleMethods","abTestingEnabled","accuracy","deploymentStatus","mlflowExperimentId","e","console","error","interval","setInterval","clearInterval","fetchDistributedSystemsData","nodesRes","metricsRes","nodesData","metricsData","nodes","enhancedNodes","node","faultInjection","networkPartitionEnabled","latencySimulation","failureSimulation","throughput","latency","consensusTime","Array","from","_","i","node_id","role","is_partitioned","fetchMonitoringData","alertsRes","telemetryRes","metrics","alerts","telemetry","raw","fetchChatbotData","vectorRes","vectorData","totalVectors","dimensions","indexSize","queryLatency","createPipeline","values","response","headers","body","JSON","stringify","result","log","optimizeHyperparameters","pipelineId","deployModel","modelId","environment","triggerElection","injectFailure","nodeId","addNode","benchmarkPerformance","sendMessage","trim","userMsg","msgs","message","data","executeMLCommand","command","menuItems","key","icon","fileName","_jsxFileName","lineNumber","columnNumber","label","renderDashboard","children","gutter","style","marginBottom","xs","sm","md","title","value","filter","prefix","valueStyle","color","n","suffix","lg","extra","className","pipeline","padding","border","borderRadius","display","justifyContent","alignItems","fontWeight","percent","size","fontSize","marginTop","toFixed","onClick","gridTemplateColumns","gap","background","textAlign","renderMLPipeline","type","defaultActiveKey","tab","dataSource","columns","dataIndex","render","acc","record","pagination","format","span","open","onCancel","footer","onFinish","layout","Item","rules","required","placeholder","htmlType","renderDistributedSim","danger","direction","width","block","renderChatbot","minHeight","maxHeight","overflowY","msg","idx","margin","maxWidth","onChange","target","onPressEnter","disabled","marginRight","wrap","renderMonitoring","operation","duration","alert","description","severity","renderContent","mode","selectedKeys","height","borderRight","items","_c","$RefreshReg$"],"sources":["/Users/ntondepu/AgentML/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Layout, Menu, Card, Row, Col, Statistic, Badge, Button, Space, Tabs, Progress, Table, Form, Input, Select, Modal } from 'antd';\nimport { \n  DashboardOutlined, \n  RobotOutlined, \n  ClusterOutlined, \n  MessageOutlined,\n  BarChartOutlined,\n  SettingOutlined,\n  PlayCircleOutlined,\n  SyncOutlined,\n  ExperimentOutlined,\n  ThunderboltOutlined,\n  MonitorOutlined,\n  AlertOutlined,\n  DatabaseOutlined\n} from '@ant-design/icons';\nimport './App.css';\n\nconst { Header, Content, Sider } = Layout;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nfunction App() {\n  const [selectedKey, setSelectedKey] = useState('dashboard');\n  const [loading, setLoading] = useState(false);\n  \n  // Enterprise ML Pipeline State\n  const [mlPipelines, setMlPipelines] = useState([]);\n  const [mlflowExperiments, setMlflowExperiments] = useState([]);\n  const [modelMetrics, setModelMetrics] = useState({});\n  \n  // Distributed Systems State\n  const [raftNodes, setRaftNodes] = useState([]);\n  const [raftMetrics, setRaftMetrics] = useState({});\n  const [performanceMetrics, setPerformanceMetrics] = useState({});\n  \n  // AI Chatbot State\n  const [chatMessages, setChatMessages] = useState([\n    { sender: 'assistant', text: 'Enterprise AutoML Platform ready. I can help with ML operations, distributed systems, and performance analytics.' }\n  ]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [chatLoading, setChatLoading] = useState(false);\n  const [vectorDbStats, setVectorDbStats] = useState({});\n  \n  // Monitoring State\n  const [prometheusMetrics, setPrometheusMetrics] = useState({});\n  const [alertsData, setAlertsData] = useState([]);\n  const [telemetryData, setTelemetryData] = useState({});\n  \n  // Modal states\n  const [createPipelineModal, setCreatePipelineModal] = useState(false);\n\n  // Enterprise ML Pipeline Data Fetching\n  useEffect(() => {\n    async function fetchEnterpriseMLData() {\n      try {\n        const [pipelinesRes, experimentsRes, modelsRes] = await Promise.all([\n          fetch('http://localhost:8000/api/ml/pipelines'),\n          fetch('http://localhost:8000/api/ml/experiments'), \n          fetch('http://localhost:8000/api/ml/models')\n        ]);\n        \n        const [pipelines, experiments, models] = await Promise.all([\n          pipelinesRes.json().catch(() => []),\n          experimentsRes.json().catch(() => []),\n          modelsRes.json().catch(() => [])\n        ]);\n        \n        // Enhance pipelines with enterprise features\n        const enhancedPipelines = pipelines.length ? pipelines.map(p => ({\n          id: p.id,\n          name: p.name || `Pipeline ${p.id}`,\n          status: p.status,\n          progress: p.progress || Math.floor(Math.random() * 40) + 60,\n          hyperparamOptimization: {\n            method: 'Bayesian',\n            iterations: Math.floor(Math.random() * 50) + 20,\n            bestParams: { learning_rate: 0.01, n_estimators: 100 },\n            improvement: Math.random() * 0.2 + 0.05\n          },\n          anomalyDetection: {\n            enabled: true,\n            anomaliesFound: Math.floor(Math.random() * 10),\n            dataQualityScore: Math.floor(Math.random() * 20) + 80\n          },\n          ensembleMethods: ['Random Forest', 'XGBoost', 'Neural Network'],\n          abTestingEnabled: true,\n          accuracy: Math.random() * 0.3 + 0.7,\n          deploymentStatus: ['development', 'staging', 'production'][Math.floor(Math.random() * 3)],\n          mlflowExperimentId: `exp_${p.id}`\n        })) : [\n          {\n            id: 1,\n            name: 'Customer Churn Prediction',\n            status: 'running',\n            progress: 75,\n            hyperparamOptimization: { method: 'Bayesian', iterations: 45, improvement: 0.12 },\n            anomalyDetection: { enabled: true, anomaliesFound: 3, dataQualityScore: 94 },\n            ensembleMethods: ['Random Forest', 'XGBoost'],\n            abTestingEnabled: true,\n            accuracy: 0.87,\n            deploymentStatus: 'production'\n          },\n          {\n            id: 2,\n            name: 'Fraud Detection',\n            status: 'optimizing',\n            progress: 60,\n            hyperparamOptimization: { method: 'Grid Search', iterations: 100, improvement: 0.18 },\n            anomalyDetection: { enabled: true, anomaliesFound: 12, dataQualityScore: 91 },\n            ensembleMethods: ['Neural Network', 'SVM'],\n            abTestingEnabled: true,\n            accuracy: 0.94,\n            deploymentStatus: 'staging'\n          }\n        ];\n        \n        setMlPipelines(enhancedPipelines);\n        setMlflowExperiments(experiments);\n        \n      } catch (e) {\n        console.error('Failed to fetch enterprise ML data:', e);\n      }\n    }\n    \n    fetchEnterpriseMLData();\n    const interval = setInterval(fetchEnterpriseMLData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Distributed Systems Data Fetching\n  useEffect(() => {\n    async function fetchDistributedSystemsData() {\n      setLoading(true);\n      try {\n        const [nodesRes, metricsRes] = await Promise.all([\n          fetch('http://localhost:8000/api/distributed/nodes'),\n          fetch('http://localhost:8000/api/distributed/metrics')\n        ]);\n        \n        const [nodesData, metricsData] = await Promise.all([\n          nodesRes.json().catch(() => ({ nodes: [] })),\n          metricsRes.json().catch(() => ({}))\n        ]);\n        \n        // Enhanced nodes with enterprise features\n        const enhancedNodes = (nodesData.nodes || []).length ? \n          nodesData.nodes.map(node => ({\n            ...node,\n            faultInjection: {\n              networkPartitionEnabled: Math.random() > 0.8,\n              latencySimulation: Math.floor(Math.random() * 100) + 10,\n              failureSimulation: Math.random() > 0.9\n            },\n            performanceMetrics: {\n              throughput: Math.floor(Math.random() * 1000) + 500,\n              latency: Math.floor(Math.random() * 50) + 10,\n              consensusTime: Math.floor(Math.random() * 200) + 50\n            }\n          })) :\n          Array.from({ length: 5 }, (_, i) => ({\n            node_id: `node_${i}`,\n            role: i === 0 ? 'LEADER' : 'FOLLOWER',\n            status: Math.random() > 0.1 ? 'RUNNING' : 'STOPPED',\n            is_partitioned: Math.random() > 0.8,\n            faultInjection: {\n              networkPartitionEnabled: Math.random() > 0.7,\n              latencySimulation: Math.floor(Math.random() * 100) + 10\n            },\n            performanceMetrics: {\n              throughput: Math.floor(Math.random() * 1000) + 500,\n              latency: Math.floor(Math.random() * 50) + 10\n            }\n          }));\n        \n        setRaftNodes(enhancedNodes);\n        setRaftMetrics(metricsData);\n        \n      } catch (e) {\n        console.error('Failed to fetch distributed systems data:', e);\n      }\n      setLoading(false);\n    }\n    \n    fetchDistributedSystemsData();\n    const interval = setInterval(fetchDistributedSystemsData, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Monitoring Data Fetching\n  useEffect(() => {\n    async function fetchMonitoringData() {\n      try {\n        const [metricsRes, alertsRes, telemetryRes] = await Promise.all([\n          fetch('http://localhost:8000/metrics'),\n          fetch('http://localhost:8000/api/monitoring/alerts'),\n          fetch('http://localhost:8000/api/telemetry/traces')\n        ]);\n        \n        const [metrics, alerts, telemetry] = await Promise.all([\n          metricsRes.text().catch(() => ''),\n          alertsRes.json().catch(() => []),\n          telemetryRes.json().catch(() => ({}))\n        ]);\n        \n        setPrometheusMetrics({ raw: metrics });\n        setAlertsData(alerts);\n        setTelemetryData(telemetry);\n        \n      } catch (e) {\n        console.error('Failed to fetch monitoring data:', e);\n      }\n    }\n    \n    fetchMonitoringData();\n    const interval = setInterval(fetchMonitoringData, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Chatbot and Vector DB Data Fetching\n  useEffect(() => {\n    async function fetchChatbotData() {\n      try {\n        const vectorRes = await fetch('http://localhost:8000/api/chatbot/vector-stats');\n        const vectorData = await vectorRes.json().catch(() => ({\n          totalVectors: Math.floor(Math.random() * 10000) + 5000,\n          dimensions: 384,\n          indexSize: '2.3GB',\n          queryLatency: Math.floor(Math.random() * 50) + 10\n        }));\n        \n        setVectorDbStats(vectorData);\n        \n      } catch (e) {\n        console.error('Failed to fetch chatbot data:', e);\n        setVectorDbStats({\n          totalVectors: Math.floor(Math.random() * 10000) + 5000,\n          dimensions: 384,\n          indexSize: '2.3GB',\n          queryLatency: Math.floor(Math.random() * 50) + 10\n        });\n      }\n    }\n    \n    fetchChatbotData();\n    const interval = setInterval(fetchChatbotData, 15000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Enterprise ML Operations\n  const createPipeline = async (values) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/ml/pipelines', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      console.log('Pipeline created:', result);\n      setCreatePipelineModal(false);\n    } catch (e) {\n      console.error('Failed to create pipeline:', e);\n    }\n  };\n\n  const optimizeHyperparameters = async (pipelineId) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/ml/pipelines/${pipelineId}/optimize`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ method: 'bayesian', iterations: 50 })\n      });\n      const result = await response.json();\n      console.log('Hyperparameter optimization started:', result);\n    } catch (e) {\n      console.error('Failed to optimize hyperparameters:', e);\n    }\n  };\n\n  const deployModel = async (modelId) => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/ml/models/${modelId}/deploy`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ environment: 'production' })\n      });\n      const result = await response.json();\n      console.log('Model deployed:', result);\n    } catch (e) {\n      console.error('Failed to deploy model:', e);\n    }\n  };\n\n  // Distributed Systems Operations\n  const triggerElection = async () => {\n    try {\n      await fetch('http://localhost:8000/api/distributed/trigger-election', { method: 'POST' });\n    } catch (e) {\n      console.error('Failed to trigger election:', e);\n    }\n  };\n\n  const injectFailure = async (nodeId) => {\n    try {\n      await fetch(`http://localhost:8000/api/distributed/inject-failure/${nodeId}`, { method: 'POST' });\n    } catch (e) {\n      console.error('Failed to inject failure:', e);\n    }\n  };\n\n  const addNode = async () => {\n    try {\n      await fetch('http://localhost:8000/api/distributed/add-node', { method: 'POST' });\n    } catch (e) {\n      console.error('Failed to add node:', e);\n    }\n  };\n\n  const benchmarkPerformance = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/distributed/benchmark', { method: 'POST' });\n      const result = await response.json();\n      console.log('Benchmark started:', result);\n    } catch (e) {\n      console.error('Failed to start benchmark:', e);\n    }\n  };\n\n  // Chatbot Operations\n  const sendMessage = async () => {\n    if (!chatInput.trim()) return;\n    \n    const userMsg = { sender: 'user', text: chatInput };\n    setChatMessages(msgs => [...msgs, userMsg]);\n    setChatLoading(true);\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/chatbot/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: chatInput })\n      });\n      const data = await response.json();\n      setChatMessages(msgs => [...msgs, { \n        sender: 'assistant', \n        text: data.response || data.message || 'Response received' \n      }]);\n    } catch (e) {\n      console.error('Chatbot error:', e);\n      setChatMessages(msgs => [...msgs, { \n        sender: 'assistant', \n        text: 'Sorry, there was an error contacting the chatbot.' \n      }]);\n    }\n    \n    setChatInput(\"\");\n    setChatLoading(false);\n  };\n\n  const executeMLCommand = async (command) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/chatbot/ml-command', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ command })\n      });\n      const result = await response.json();\n      setChatMessages(msgs => [...msgs, { \n        sender: 'assistant', \n        text: `Executed: ${command}. Result: ${JSON.stringify(result)}` \n      }]);\n    } catch (e) {\n      console.error('Failed to execute ML command:', e);\n    }\n  };\n\n  const menuItems = [\n    { key: 'dashboard', icon: <DashboardOutlined />, label: 'Dashboard' },\n    { key: 'ml-pipeline', icon: <RobotOutlined />, label: 'ML Pipeline' },\n    { key: 'distributed', icon: <ClusterOutlined />, label: 'Distributed Sim' },\n    { key: 'chatbot', icon: <MessageOutlined />, label: 'AI Chatbot' },\n    { key: 'monitoring', icon: <BarChartOutlined />, label: 'Monitoring' },\n    { key: 'settings', icon: <SettingOutlined />, label: 'Settings' }\n  ];\n\n  const renderDashboard = () => (\n    <div>\n      <Row gutter={[16, 16]} style={{ marginBottom: 24 }}>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Active ML Pipelines\"\n              value={mlPipelines.filter(p => p.status === 'running').length}\n              prefix={<RobotOutlined />}\n              valueStyle={{ color: '#3f8600' }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Distributed Nodes\"\n              value={`${raftNodes.filter(n => n.status === 'RUNNING').length}/${raftNodes.length}`}\n              prefix={<ClusterOutlined />}\n              valueStyle={{ color: '#1890ff' }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Vector DB Size\"\n              value={vectorDbStats.totalVectors || 0}\n              prefix={<DatabaseOutlined />}\n              valueStyle={{ color: '#722ed1' }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"System Health\"\n              value=\"98.5%\"\n              suffix=\"%\"\n              prefix={<MonitorOutlined />}\n              valueStyle={{ color: '#52c41a' }}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      <Row gutter={[16, 16]}>\n        <Col xs={24} lg={12}>\n          <Card title=\"ML Pipeline Status\" extra={<Button icon={<SyncOutlined />}>Refresh</Button>}>\n            <div className=\"pipeline-list\">\n              {mlPipelines.map(pipeline => (\n                <div key={pipeline.id} className=\"pipeline-item\" style={{ marginBottom: 16, padding: 12, border: '1px solid #f0f0f0', borderRadius: 6 }}>\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>\n                    <span style={{ fontWeight: 'bold' }}>{pipeline.name}</span>\n                    <Badge \n                      status={pipeline.status === 'running' ? 'processing' : \n                              pipeline.status === 'completed' ? 'success' : 'default'} \n                      text={pipeline.status}\n                    />\n                  </div>\n                  <Progress percent={pipeline.progress} size=\"small\" />\n                  <div style={{ fontSize: 12, color: '#666', marginTop: 4 }}>\n                    Accuracy: {(pipeline.accuracy * 100).toFixed(1)}% | \n                    Method: {pipeline.hyperparamOptimization.method} |\n                    Status: {pipeline.deploymentStatus}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"Distributed Cluster\" extra={<Button icon={<PlayCircleOutlined />} onClick={triggerElection}>Trigger Election</Button>}>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))', gap: 8 }}>\n              {raftNodes.map(node => (\n                <div key={node.node_id} style={{\n                  background: node.role === 'LEADER' ? '#ffe58f' : node.status === 'RUNNING' ? '#e6f7ff' : '#fff1f0',\n                  border: node.role === 'LEADER' ? '2px solid #faad14' : '1px solid #d9d9d9',\n                  padding: 8, borderRadius: 6, textAlign: 'center', fontSize: 12\n                }}>\n                  <div style={{ fontWeight: 'bold' }}>{node.node_id}</div>\n                  <div>{node.role}</div>\n                  <Badge status={node.status === 'RUNNING' ? 'success' : 'error'} text={node.status} />\n                  {node.is_partitioned && <div style={{ color: 'red', fontSize: 12 }}>Partitioned</div>}\n                </div>\n              ))}\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n\n  const renderMLPipeline = () => (\n    <div>\n      <Card title=\"Enterprise ML Pipeline Management\" \n            extra={<Button type=\"primary\" onClick={() => setCreatePipelineModal(true)}>Create Pipeline</Button>}>\n        <Tabs defaultActiveKey=\"pipelines\">\n          <TabPane tab=\"Active Pipelines\" key=\"pipelines\">\n            <Table\n              dataSource={mlPipelines}\n              columns={[\n                { title: 'Name', dataIndex: 'name', key: 'name' },\n                { title: 'Status', dataIndex: 'status', key: 'status',\n                  render: (status) => <Badge status={status === 'running' ? 'processing' : 'success'} text={status} />\n                },\n                { title: 'Progress', dataIndex: 'progress', key: 'progress',\n                  render: (progress) => <Progress percent={progress} size=\"small\" />\n                },\n                { title: 'Accuracy', dataIndex: 'accuracy', key: 'accuracy',\n                  render: (acc) => `${(acc * 100).toFixed(1)}%`\n                },\n                { title: 'Deployment', dataIndex: 'deploymentStatus', key: 'deployment' },\n                { title: 'Actions', key: 'actions',\n                  render: (_, record) => (\n                    <Space>\n                      <Button size=\"small\" onClick={() => optimizeHyperparameters(record.id)}>Optimize</Button>\n                      <Button size=\"small\" type=\"primary\" onClick={() => deployModel(record.id)}>Deploy</Button>\n                    </Space>\n                  )\n                }\n              ]}\n              pagination={false}\n            />\n          </TabPane>\n          <TabPane tab=\"Hyperparameter Optimization\" key=\"hyperparams\">\n            <div>\n              {mlPipelines.map(pipeline => (\n                <Card key={pipeline.id} style={{ marginBottom: 16 }}>\n                  <h4>{pipeline.name}</h4>\n                  <p>Method: {pipeline.hyperparamOptimization.method}</p>\n                  <p>Iterations: {pipeline.hyperparamOptimization.iterations}</p>\n                  <p>Improvement: {(pipeline.hyperparamOptimization.improvement * 100).toFixed(1)}%</p>\n                  <Progress \n                    percent={(pipeline.hyperparamOptimization.iterations / 100) * 100} \n                    format={() => `${pipeline.hyperparamOptimization.iterations}/100`}\n                  />\n                </Card>\n              ))}\n            </div>\n          </TabPane>\n          <TabPane tab=\"A/B Testing\" key=\"abtesting\">\n            <div>\n              {mlPipelines.filter(p => p.abTestingEnabled).map(pipeline => (\n                <Card key={pipeline.id} style={{ marginBottom: 16 }}>\n                  <h4>{pipeline.name} - A/B Test</h4>\n                  <Row gutter={16}>\n                    <Col span={12}>\n                      <Card size=\"small\" title=\"Variant A\">\n                        <Statistic title=\"Conversion Rate\" value=\"12.3%\" />\n                        <Statistic title=\"Traffic Split\" value=\"50%\" />\n                      </Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card size=\"small\" title=\"Variant B\">\n                        <Statistic title=\"Conversion Rate\" value=\"14.7%\" />\n                        <Statistic title=\"Traffic Split\" value=\"50%\" />\n                      </Card>\n                    </Col>\n                  </Row>\n                  <div style={{ marginTop: 16 }}>\n                    <Badge status=\"success\" text=\"Statistical Significance: 95%\" />\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </TabPane>\n        </Tabs>\n      </Card>\n\n      {/* Create Pipeline Modal */}\n      <Modal title=\"Create New ML Pipeline\" open={createPipelineModal} onCancel={() => setCreatePipelineModal(false)} footer={null}>\n        <Form onFinish={createPipeline} layout=\"vertical\">\n          <Form.Item name=\"name\" label=\"Pipeline Name\" rules={[{ required: true }]}>\n            <Input placeholder=\"Enter pipeline name\" />\n          </Form.Item>\n          <Form.Item name=\"dataset\" label=\"Dataset\" rules={[{ required: true }]}>\n            <Select placeholder=\"Select dataset\">\n              <Option value=\"churn_dataset\">Customer Churn Dataset</Option>\n              <Option value=\"fraud_dataset\">Fraud Detection Dataset</Option>\n              <Option value=\"recommendation_dataset\">Recommendation Dataset</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"algorithm\" label=\"Algorithm\" rules={[{ required: true }]}>\n            <Select placeholder=\"Select algorithm\">\n              <Option value=\"random_forest\">Random Forest</Option>\n              <Option value=\"xgboost\">XGBoost</Option>\n              <Option value=\"neural_network\">Neural Network</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">Create Pipeline</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n\n  const renderDistributedSim = () => (\n    <div>\n      <Card title=\"Enterprise Distributed Systems Simulation\">\n        <Row gutter={[16, 16]}>\n          <Col xs={24} lg={16}>\n            <Card title=\"Cluster Visualization\" className=\"cluster-viz\">\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))', gap: 16 }}>\n                {loading ? <div>Loading...</div> :\n                  raftNodes.map(node => (\n                    <Card key={node.node_id} size=\"small\" \n                          style={{\n                            background: node.role === 'LEADER' ? '#ffe58f' : node.status === 'RUNNING' ? '#e6f7ff' : '#fff1f0',\n                            border: node.role === 'LEADER' ? '2px solid #faad14' : '1px solid #d9d9d9'\n                          }}>\n                      <div style={{ textAlign: 'center' }}>\n                        <div style={{ fontWeight: 'bold' }}>{node.node_id}</div>\n                        <div>{node.role}</div>\n                        <Badge status={node.status === 'RUNNING' ? 'success' : 'error'} text={node.status} />\n                        {node.is_partitioned && <div style={{ color: 'red', fontSize: 12 }}>Partitioned</div>}\n                        {node.performanceMetrics && (\n                          <div style={{ fontSize: 11, marginTop: 8 }}>\n                            <div>Throughput: {node.performanceMetrics.throughput}/s</div>\n                            <div>Latency: {node.performanceMetrics.latency}ms</div>\n                          </div>\n                        )}\n                        <Button size=\"small\" danger style={{ marginTop: 8 }} \n                                onClick={() => injectFailure(node.node_id)}>\n                          Inject Failure\n                        </Button>\n                      </div>\n                    </Card>\n                  ))\n                }\n              </div>\n            </Card>\n          </Col>\n          <Col xs={24} lg={8}>\n            <Card title=\"Controls\">\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Button block icon={<PlayCircleOutlined />} onClick={triggerElection}>\n                  Trigger Election\n                </Button>\n                <Button block icon={<ThunderboltOutlined />} onClick={addNode}>\n                  Add Node\n                </Button>\n                <Button block icon={<ExperimentOutlined />} onClick={benchmarkPerformance}>\n                  Benchmark Performance\n                </Button>\n                <Button block icon={<AlertOutlined />} onClick={() => injectFailure('random')}>\n                  Inject Random Failure\n                </Button>\n              </Space>\n            </Card>\n            \n            <Card title=\"Performance Metrics\" style={{ marginTop: 16 }}>\n              <Statistic title=\"Consensus Time\" value={performanceMetrics.consensusTime || 120} suffix=\"ms\" />\n              <Statistic title=\"Throughput\" value={performanceMetrics.throughput || 850} suffix=\"ops/s\" />\n              <Statistic title=\"Network Latency\" value={performanceMetrics.latency || 25} suffix=\"ms\" />\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n\n  const renderChatbot = () => (\n    <div>\n      <Card title=\"Enterprise AI Chatbot with RAG\">\n        <Row gutter={[16, 16]}>\n          <Col xs={24} lg={16}>\n            <Card title=\"Chat Interface\" className=\"chat-interface\">\n              <div style={{ \n                minHeight: 400, \n                maxHeight: 500, \n                overflowY: 'auto', \n                marginBottom: 16, \n                padding: 16, \n                background: '#fafafa', \n                borderRadius: 6 \n              }}>\n                {chatMessages.map((msg, idx) => (\n                  <div key={idx} style={{ \n                    textAlign: msg.sender === 'user' ? 'right' : 'left', \n                    margin: '12px 0' \n                  }}>\n                    <div style={{ \n                      display: 'inline-block',\n                      background: msg.sender === 'user' ? '#1890ff' : '#f0f0f0',\n                      color: msg.sender === 'user' ? 'white' : 'black',\n                      padding: '8px 12px', \n                      borderRadius: 12,\n                      maxWidth: '70%'\n                    }}>\n                      {msg.text}\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div style={{ display: 'flex', gap: 8 }}>\n                <Input\n                  value={chatInput}\n                  onChange={e => setChatInput(e.target.value)}\n                  onPressEnter={sendMessage}\n                  placeholder=\"Ask about ML pipelines, distributed systems, or performance...\"\n                  disabled={chatLoading}\n                />\n                <Button type=\"primary\" onClick={sendMessage} loading={chatLoading}>\n                  Send\n                </Button>\n              </div>\n              \n              <div style={{ marginTop: 16 }}>\n                <span style={{ marginRight: 8 }}>Quick Actions:</span>\n                <Space wrap>\n                  <Button size=\"small\" onClick={() => executeMLCommand('status')}>\n                    Get ML Status\n                  </Button>\n                  <Button size=\"small\" onClick={() => executeMLCommand('accuracy')}>\n                    Latest Accuracy\n                  </Button>\n                  <Button size=\"small\" onClick={() => executeMLCommand('deploy')}>\n                    Deploy Best Model\n                  </Button>\n                </Space>\n              </div>\n            </Card>\n          </Col>\n          \n          <Col xs={24} lg={8}>\n            <Card title=\"Vector Database Stats\">\n              <Statistic title=\"Total Vectors\" value={vectorDbStats.totalVectors || 0} />\n              <Statistic title=\"Dimensions\" value={vectorDbStats.dimensions || 384} />\n              <Statistic title=\"Index Size\" value={vectorDbStats.indexSize || '2.3GB'} />\n              <Statistic title=\"Query Latency\" value={vectorDbStats.queryLatency || 15} suffix=\"ms\" />\n            </Card>\n            \n            <Card title=\"RAG Configuration\" style={{ marginTop: 16 }}>\n              <div>\n                <p><strong>Retrieval:</strong> FAISS Vector Search</p>\n                <p><strong>Generation:</strong> GPT-4 Turbo</p>\n                <p><strong>Context Window:</strong> 8,192 tokens</p>\n                <p><strong>Similarity Threshold:</strong> 0.8</p>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n\n  const renderMonitoring = () => (\n    <div>\n      <Card title=\"Enterprise Monitoring Dashboard\">\n        <Tabs defaultActiveKey=\"metrics\">\n          <TabPane tab=\"Prometheus Metrics\" key=\"metrics\">\n            <Row gutter={[16, 16]}>\n              <Col xs={24} md={8}>\n                <Card>\n                  <Statistic title=\"API Requests\" value={2847} prefix={<BarChartOutlined />} />\n                </Card>\n              </Col>\n              <Col xs={24} md={8}>\n                <Card>\n                  <Statistic title=\"Error Rate\" value={0.5} suffix=\"%\" valueStyle={{ color: '#52c41a' }} />\n                </Card>\n              </Col>\n              <Col xs={24} md={8}>\n                <Card>\n                  <Statistic title=\"Avg Response Time\" value={120} suffix=\"ms\" />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          \n          <TabPane tab=\"OpenTelemetry Traces\" key=\"traces\">\n            <Table\n              dataSource={[\n                { id: 1, operation: 'ml_pipeline_execution', duration: '1.2s', status: 'success' },\n                { id: 2, operation: 'raft_consensus', duration: '45ms', status: 'success' },\n                { id: 3, operation: 'vector_search', duration: '15ms', status: 'success' }\n              ]}\n              columns={[\n                { title: 'Operation', dataIndex: 'operation', key: 'operation' },\n                { title: 'Duration', dataIndex: 'duration', key: 'duration' },\n                { title: 'Status', dataIndex: 'status', key: 'status',\n                  render: (status) => <Badge status=\"success\" text={status} />\n                }\n              ]}\n            />\n          </TabPane>\n          \n          <TabPane tab=\"Alerts\" key=\"alerts\">\n            <div>\n              {alertsData.length === 0 ? (\n                <div style={{ textAlign: 'center', padding: 32 }}>\n                  <AlertOutlined style={{ fontSize: 48, color: '#52c41a' }} />\n                  <h3>No Active Alerts</h3>\n                  <p>All systems operating normally</p>\n                </div>\n              ) : (\n                alertsData.map(alert => (\n                  <Card key={alert.id} style={{ marginBottom: 16 }}>\n                    <h4>{alert.title}</h4>\n                    <p>{alert.description}</p>\n                    <Badge status=\"error\" text={alert.severity} />\n                  </Card>\n                ))\n              )}\n            </div>\n          </TabPane>\n        </Tabs>\n      </Card>\n    </div>\n  );\n\n  const renderContent = () => {\n    switch (selectedKey) {\n      case 'dashboard':\n        return renderDashboard();\n      case 'ml-pipeline':\n        return renderMLPipeline();\n      case 'distributed':\n        return renderDistributedSim();\n      case 'chatbot':\n        return renderChatbot();\n      case 'monitoring':\n        return renderMonitoring();\n      default:\n        return <div>Coming soon...</div>;\n    }\n  };\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header style={{ background: '#001529', padding: '0 24px' }}>\n        <div style={{ color: 'white', fontSize: 18, fontWeight: 'bold' }}>\n          🚀 Enterprise AutoML Platform\n        </div>\n      </Header>\n      <Layout>\n        <Sider width={200} style={{ background: '#fff' }}>\n          <Menu\n            mode=\"inline\"\n            selectedKeys={[selectedKey]}\n            style={{ height: '100%', borderRight: 0 }}\n            items={menuItems}\n            onClick={({ key }) => setSelectedKey(key)}\n          />\n        </Sider>\n        <Layout style={{ padding: '24px' }}>\n          <Content style={{ padding: 24, margin: 0, minHeight: 280, background: '#fff', borderRadius: 6 }}>\n            {renderContent()}\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACvI,SACEC,iBAAiB,EACjBC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,eAAe,EACfC,kBAAkB,EAClBC,YAAY,EACZC,kBAAkB,EAClBC,mBAAmB,EACnBC,eAAe,EACfC,aAAa,EACbC,gBAAgB,QACX,mBAAmB;AAC1B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAM;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,GAAGjC,MAAM;AACzC,MAAM;EAAEkC;AAAQ,CAAC,GAAGzB,IAAI;AACxB,MAAM;EAAE0B;AAAO,CAAC,GAAGrB,MAAM;AAEzB,SAASsB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,WAAW,CAAC;EAC3D,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACsD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhE;EACA,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC,CAC/C;IAAE0D,MAAM,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAmH,CAAC,CAClJ,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgE,aAAa,EAAEC,gBAAgB,CAAC,GAAGjE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAM,CAACkE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACoE,UAAU,EAAEC,aAAa,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsE,aAAa,EAAEC,gBAAgB,CAAC,GAAGvE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAM,CAACwE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACAC,SAAS,CAAC,MAAM;IACd,eAAeyE,qBAAqBA,CAAA,EAAG;MACrC,IAAI;QACF,MAAM,CAACC,YAAY,EAAEC,cAAc,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClEC,KAAK,CAAC,wCAAwC,CAAC,EAC/CA,KAAK,CAAC,0CAA0C,CAAC,EACjDA,KAAK,CAAC,qCAAqC,CAAC,CAC7C,CAAC;QAEF,MAAM,CAACC,SAAS,EAAEC,WAAW,EAAEC,MAAM,CAAC,GAAG,MAAML,OAAO,CAACC,GAAG,CAAC,CACzDJ,YAAY,CAACS,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,EACnCT,cAAc,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,EACrCR,SAAS,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,CACjC,CAAC;;QAEF;QACA,MAAMC,iBAAiB,GAAGL,SAAS,CAACM,MAAM,GAAGN,SAAS,CAACO,GAAG,CAACC,CAAC,KAAK;UAC/DC,EAAE,EAAED,CAAC,CAACC,EAAE;UACRC,IAAI,EAAEF,CAAC,CAACE,IAAI,IAAI,YAAYF,CAAC,CAACC,EAAE,EAAE;UAClCE,MAAM,EAAEH,CAAC,CAACG,MAAM;UAChBC,QAAQ,EAAEJ,CAAC,CAACI,QAAQ,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;UAC3DC,sBAAsB,EAAE;YACtBC,MAAM,EAAE,UAAU;YAClBC,UAAU,EAAEL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;YAC/CI,UAAU,EAAE;cAAEC,aAAa,EAAE,IAAI;cAAEC,YAAY,EAAE;YAAI,CAAC;YACtDC,WAAW,EAAET,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;UACrC,CAAC;UACDQ,gBAAgB,EAAE;YAChBC,OAAO,EAAE,IAAI;YACbC,cAAc,EAAEZ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;YAC9CW,gBAAgB,EAAEb,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UACrD,CAAC;UACDY,eAAe,EAAE,CAAC,eAAe,EAAE,SAAS,EAAE,gBAAgB,CAAC;UAC/DC,gBAAgB,EAAE,IAAI;UACtBC,QAAQ,EAAEhB,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;UACnCe,gBAAgB,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAACjB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UACzFgB,kBAAkB,EAAE,OAAOvB,CAAC,CAACC,EAAE;QACjC,CAAC,CAAC,CAAC,GAAG,CACJ;UACEA,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE,2BAA2B;UACjCC,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE,EAAE;UACZI,sBAAsB,EAAE;YAAEC,MAAM,EAAE,UAAU;YAAEC,UAAU,EAAE,EAAE;YAAEI,WAAW,EAAE;UAAK,CAAC;UACjFC,gBAAgB,EAAE;YAAEC,OAAO,EAAE,IAAI;YAAEC,cAAc,EAAE,CAAC;YAAEC,gBAAgB,EAAE;UAAG,CAAC;UAC5EC,eAAe,EAAE,CAAC,eAAe,EAAE,SAAS,CAAC;UAC7CC,gBAAgB,EAAE,IAAI;UACtBC,QAAQ,EAAE,IAAI;UACdC,gBAAgB,EAAE;QACpB,CAAC,EACD;UACErB,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE,iBAAiB;UACvBC,MAAM,EAAE,YAAY;UACpBC,QAAQ,EAAE,EAAE;UACZI,sBAAsB,EAAE;YAAEC,MAAM,EAAE,aAAa;YAAEC,UAAU,EAAE,GAAG;YAAEI,WAAW,EAAE;UAAK,CAAC;UACrFC,gBAAgB,EAAE;YAAEC,OAAO,EAAE,IAAI;YAAEC,cAAc,EAAE,EAAE;YAAEC,gBAAgB,EAAE;UAAG,CAAC;UAC7EC,eAAe,EAAE,CAAC,gBAAgB,EAAE,KAAK,CAAC;UAC1CC,gBAAgB,EAAE,IAAI;UACtBC,QAAQ,EAAE,IAAI;UACdC,gBAAgB,EAAE;QACpB,CAAC,CACF;QAEDlE,cAAc,CAACyC,iBAAiB,CAAC;QACjCvC,oBAAoB,CAACmC,WAAW,CAAC;MAEnC,CAAC,CAAC,OAAO+B,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,CAAC,CAAC;MACzD;IACF;IAEAvC,qBAAqB,CAAC,CAAC;IACvB,MAAM0C,QAAQ,GAAGC,WAAW,CAAC3C,qBAAqB,EAAE,IAAI,CAAC;IACzD,OAAO,MAAM4C,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnH,SAAS,CAAC,MAAM;IACd,eAAesH,2BAA2BA,CAAA,EAAG;MAC3C5E,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAM,CAAC6E,QAAQ,EAAEC,UAAU,CAAC,GAAG,MAAM3C,OAAO,CAACC,GAAG,CAAC,CAC/CC,KAAK,CAAC,6CAA6C,CAAC,EACpDA,KAAK,CAAC,+CAA+C,CAAC,CACvD,CAAC;QAEF,MAAM,CAAC0C,SAAS,EAAEC,WAAW,CAAC,GAAG,MAAM7C,OAAO,CAACC,GAAG,CAAC,CACjDyC,QAAQ,CAACpC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO;UAAEuC,KAAK,EAAE;QAAG,CAAC,CAAC,CAAC,EAC5CH,UAAU,CAACrC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACpC,CAAC;;QAEF;QACA,MAAMwC,aAAa,GAAG,CAACH,SAAS,CAACE,KAAK,IAAI,EAAE,EAAErC,MAAM,GAClDmC,SAAS,CAACE,KAAK,CAACpC,GAAG,CAACsC,IAAI,KAAK;UAC3B,GAAGA,IAAI;UACPC,cAAc,EAAE;YACdC,uBAAuB,EAAElC,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;YAC5CiC,iBAAiB,EAAEnC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE;YACvDkC,iBAAiB,EAAEpC,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG;UACrC,CAAC;UACD1C,kBAAkB,EAAE;YAClB6E,UAAU,EAAErC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG;YAClDoC,OAAO,EAAEtC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;YAC5CqC,aAAa,EAAEvC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG;UACnD;QACF,CAAC,CAAC,CAAC,GACHsC,KAAK,CAACC,IAAI,CAAC;UAAEhD,MAAM,EAAE;QAAE,CAAC,EAAE,CAACiD,CAAC,EAAEC,CAAC,MAAM;UACnCC,OAAO,EAAE,QAAQD,CAAC,EAAE;UACpBE,IAAI,EAAEF,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,UAAU;UACrC7C,MAAM,EAAEE,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS;UACnD4C,cAAc,EAAE9C,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;UACnC+B,cAAc,EAAE;YACdC,uBAAuB,EAAElC,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;YAC5CiC,iBAAiB,EAAEnC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG;UACvD,CAAC;UACD1C,kBAAkB,EAAE;YAClB6E,UAAU,EAAErC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG;YAClDoC,OAAO,EAAEtC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;UAC5C;QACF,CAAC,CAAC,CAAC;QAEL7C,YAAY,CAAC0E,aAAa,CAAC;QAC3BxE,cAAc,CAACsE,WAAW,CAAC;MAE7B,CAAC,CAAC,OAAOV,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2CAA2C,EAAEF,CAAC,CAAC;MAC/D;MACAtE,UAAU,CAAC,KAAK,CAAC;IACnB;IAEA4E,2BAA2B,CAAC,CAAC;IAC7B,MAAMH,QAAQ,GAAGC,WAAW,CAACE,2BAA2B,EAAE,IAAI,CAAC;IAC/D,OAAO,MAAMD,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnH,SAAS,CAAC,MAAM;IACd,eAAe4I,mBAAmBA,CAAA,EAAG;MACnC,IAAI;QACF,MAAM,CAACpB,UAAU,EAAEqB,SAAS,EAAEC,YAAY,CAAC,GAAG,MAAMjE,OAAO,CAACC,GAAG,CAAC,CAC9DC,KAAK,CAAC,+BAA+B,CAAC,EACtCA,KAAK,CAAC,6CAA6C,CAAC,EACpDA,KAAK,CAAC,4CAA4C,CAAC,CACpD,CAAC;QAEF,MAAM,CAACgE,OAAO,EAAEC,MAAM,EAAEC,SAAS,CAAC,GAAG,MAAMpE,OAAO,CAACC,GAAG,CAAC,CACrD0C,UAAU,CAAC9D,IAAI,CAAC,CAAC,CAAC0B,KAAK,CAAC,MAAM,EAAE,CAAC,EACjCyD,SAAS,CAAC1D,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC,EAChC0D,YAAY,CAAC3D,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC;QAEFlB,oBAAoB,CAAC;UAAEgF,GAAG,EAAEH;QAAQ,CAAC,CAAC;QACtC3E,aAAa,CAAC4E,MAAM,CAAC;QACrB1E,gBAAgB,CAAC2E,SAAS,CAAC;MAE7B,CAAC,CAAC,OAAOjC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,CAAC,CAAC;MACtD;IACF;IAEA4B,mBAAmB,CAAC,CAAC;IACrB,MAAMzB,QAAQ,GAAGC,WAAW,CAACwB,mBAAmB,EAAE,KAAK,CAAC;IACxD,OAAO,MAAMvB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnH,SAAS,CAAC,MAAM;IACd,eAAemJ,gBAAgBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMrE,KAAK,CAAC,gDAAgD,CAAC;QAC/E,MAAMsE,UAAU,GAAG,MAAMD,SAAS,CAACjE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO;UACrDkE,YAAY,EAAEzD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI;UACtDwD,UAAU,EAAE,GAAG;UACfC,SAAS,EAAE,OAAO;UAClBC,YAAY,EAAE5D,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;QACjD,CAAC,CAAC,CAAC;QAEH/B,gBAAgB,CAACqF,UAAU,CAAC;MAE9B,CAAC,CAAC,OAAOrC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,CAAC,CAAC;QACjDhD,gBAAgB,CAAC;UACfsF,YAAY,EAAEzD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI;UACtDwD,UAAU,EAAE,GAAG;UACfC,SAAS,EAAE,OAAO;UAClBC,YAAY,EAAE5D,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;QACjD,CAAC,CAAC;MACJ;IACF;IAEAoD,gBAAgB,CAAC,CAAC;IAClB,MAAMhC,QAAQ,GAAGC,WAAW,CAAC+B,gBAAgB,EAAE,KAAK,CAAC;IACrD,OAAO,MAAM9B,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMuC,cAAc,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7E,KAAK,CAAC,wCAAwC,EAAE;QACrEkB,MAAM,EAAE,MAAM;QACd4D,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;MAC7B,CAAC,CAAC;MACF,MAAMM,MAAM,GAAG,MAAML,QAAQ,CAACzE,IAAI,CAAC,CAAC;MACpC8B,OAAO,CAACiD,GAAG,CAAC,mBAAmB,EAAED,MAAM,CAAC;MACxCzF,sBAAsB,CAAC,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOwC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,CAAC,CAAC;IAChD;EACF,CAAC;EAED,MAAMmD,uBAAuB,GAAG,MAAOC,UAAU,IAAK;IACpD,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAM7E,KAAK,CAAC,0CAA0CqF,UAAU,WAAW,EAAE;QAC5FnE,MAAM,EAAE,MAAM;QACd4D,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE/D,MAAM,EAAE,UAAU;UAAEC,UAAU,EAAE;QAAG,CAAC;MAC7D,CAAC,CAAC;MACF,MAAM+D,MAAM,GAAG,MAAML,QAAQ,CAACzE,IAAI,CAAC,CAAC;MACpC8B,OAAO,CAACiD,GAAG,CAAC,sCAAsC,EAAED,MAAM,CAAC;IAC7D,CAAC,CAAC,OAAOjD,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,CAAC,CAAC;IACzD;EACF,CAAC;EAED,MAAMqD,WAAW,GAAG,MAAOC,OAAO,IAAK;IACrC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAM7E,KAAK,CAAC,uCAAuCuF,OAAO,SAAS,EAAE;QACpFrE,MAAM,EAAE,MAAM;QACd4D,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEO,WAAW,EAAE;QAAa,CAAC;MACpD,CAAC,CAAC;MACF,MAAMN,MAAM,GAAG,MAAML,QAAQ,CAACzE,IAAI,CAAC,CAAC;MACpC8B,OAAO,CAACiD,GAAG,CAAC,iBAAiB,EAAED,MAAM,CAAC;IACxC,CAAC,CAAC,OAAOjD,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,CAAC,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMwD,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMzF,KAAK,CAAC,wDAAwD,EAAE;QAAEkB,MAAM,EAAE;MAAO,CAAC,CAAC;IAC3F,CAAC,CAAC,OAAOe,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMyD,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtC,IAAI;MACF,MAAM3F,KAAK,CAAC,wDAAwD2F,MAAM,EAAE,EAAE;QAAEzE,MAAM,EAAE;MAAO,CAAC,CAAC;IACnG,CAAC,CAAC,OAAOe,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,CAAC,CAAC;IAC/C;EACF,CAAC;EAED,MAAM2D,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAM5F,KAAK,CAAC,gDAAgD,EAAE;QAAEkB,MAAM,EAAE;MAAO,CAAC,CAAC;IACnF,CAAC,CAAC,OAAOe,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAM4D,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAM7E,KAAK,CAAC,iDAAiD,EAAE;QAAEkB,MAAM,EAAE;MAAO,CAAC,CAAC;MACnG,MAAMgE,MAAM,GAAG,MAAML,QAAQ,CAACzE,IAAI,CAAC,CAAC;MACpC8B,OAAO,CAACiD,GAAG,CAAC,oBAAoB,EAAED,MAAM,CAAC;IAC3C,CAAC,CAAC,OAAOjD,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,CAAC,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAM6D,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAClH,SAAS,CAACmH,IAAI,CAAC,CAAC,EAAE;IAEvB,MAAMC,OAAO,GAAG;MAAEtH,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAU,CAAC;IACnDH,eAAe,CAACwH,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAC3CjH,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF,MAAM8F,QAAQ,GAAG,MAAM7E,KAAK,CAAC,wCAAwC,EAAE;QACrEkB,MAAM,EAAE,MAAM;QACd4D,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEiB,OAAO,EAAEtH;QAAU,CAAC;MAC7C,CAAC,CAAC;MACF,MAAMuH,IAAI,GAAG,MAAMtB,QAAQ,CAACzE,IAAI,CAAC,CAAC;MAClC3B,eAAe,CAACwH,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAChCvH,MAAM,EAAE,WAAW;QACnBC,IAAI,EAAEwH,IAAI,CAACtB,QAAQ,IAAIsB,IAAI,CAACD,OAAO,IAAI;MACzC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOjE,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC;MAClCxD,eAAe,CAACwH,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAChCvH,MAAM,EAAE,WAAW;QACnBC,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;IACL;IAEAE,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMqH,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C,IAAI;MACF,MAAMxB,QAAQ,GAAG,MAAM7E,KAAK,CAAC,8CAA8C,EAAE;QAC3EkB,MAAM,EAAE,MAAM;QACd4D,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEoB;QAAQ,CAAC;MAClC,CAAC,CAAC;MACF,MAAMnB,MAAM,GAAG,MAAML,QAAQ,CAACzE,IAAI,CAAC,CAAC;MACpC3B,eAAe,CAACwH,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAChCvH,MAAM,EAAE,WAAW;QACnBC,IAAI,EAAE,aAAa0H,OAAO,aAAarB,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC;MAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOjD,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,CAAC,CAAC;IACnD;EACF,CAAC;EAED,MAAMqE,SAAS,GAAG,CAChB;IAAEC,GAAG,EAAE,WAAW;IAAEC,IAAI,eAAExJ,OAAA,CAACd,iBAAiB;MAAAuK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAY,CAAC,EACrE;IAAEN,GAAG,EAAE,aAAa;IAAEC,IAAI,eAAExJ,OAAA,CAACb,aAAa;MAAAsK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAc,CAAC,EACrE;IAAEN,GAAG,EAAE,aAAa;IAAEC,IAAI,eAAExJ,OAAA,CAACZ,eAAe;MAAAqK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAC,EAC3E;IAAEN,GAAG,EAAE,SAAS;IAAEC,IAAI,eAAExJ,OAAA,CAACX,eAAe;MAAAoK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAa,CAAC,EAClE;IAAEN,GAAG,EAAE,YAAY;IAAEC,IAAI,eAAExJ,OAAA,CAACV,gBAAgB;MAAAmK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAa,CAAC,EACtE;IAAEN,GAAG,EAAE,UAAU;IAAEC,IAAI,eAAExJ,OAAA,CAACT,eAAe;MAAAkK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,KAAK,EAAE;EAAW,CAAC,CAClE;EAED,MAAMC,eAAe,GAAGA,CAAA,kBACtB9J,OAAA;IAAA+J,QAAA,gBACE/J,OAAA,CAAC3B,GAAG;MAAC2L,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAACC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAH,QAAA,gBACjD/J,OAAA,CAAC1B,GAAG;QAAC6L,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAN,QAAA,eACzB/J,OAAA,CAAC5B,IAAI;UAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;YACR+L,KAAK,EAAC,qBAAqB;YAC3BC,KAAK,EAAE3J,WAAW,CAAC4J,MAAM,CAAC/G,CAAC,IAAIA,CAAC,CAACG,MAAM,KAAK,SAAS,CAAC,CAACL,MAAO;YAC9DkH,MAAM,eAAEzK,OAAA,CAACb,aAAa;cAAAsK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAC1Bc,UAAU,EAAE;cAAEC,KAAK,EAAE;YAAU;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;QAAC6L,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAN,QAAA,eACzB/J,OAAA,CAAC5B,IAAI;UAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;YACR+L,KAAK,EAAC,mBAAmB;YACzBC,KAAK,EAAE,GAAGrJ,SAAS,CAACsJ,MAAM,CAACI,CAAC,IAAIA,CAAC,CAAChH,MAAM,KAAK,SAAS,CAAC,CAACL,MAAM,IAAIrC,SAAS,CAACqC,MAAM,EAAG;YACrFkH,MAAM,eAAEzK,OAAA,CAACZ,eAAe;cAAAqK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAC5Bc,UAAU,EAAE;cAAEC,KAAK,EAAE;YAAU;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;QAAC6L,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAN,QAAA,eACzB/J,OAAA,CAAC5B,IAAI;UAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;YACR+L,KAAK,EAAC,gBAAgB;YACtBC,KAAK,EAAEvI,aAAa,CAACuF,YAAY,IAAI,CAAE;YACvCkD,MAAM,eAAEzK,OAAA,CAACF,gBAAgB;cAAA2J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAC7Bc,UAAU,EAAE;cAAEC,KAAK,EAAE;YAAU;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;QAAC6L,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAN,QAAA,eACzB/J,OAAA,CAAC5B,IAAI;UAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;YACR+L,KAAK,EAAC,eAAe;YACrBC,KAAK,EAAC,OAAO;YACbM,MAAM,EAAC,GAAG;YACVJ,MAAM,eAAEzK,OAAA,CAACJ,eAAe;cAAA6J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAC5Bc,UAAU,EAAE;cAAEC,KAAK,EAAE;YAAU;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5J,OAAA,CAAC3B,GAAG;MAAC2L,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAAAD,QAAA,gBACpB/J,OAAA,CAAC1B,GAAG;QAAC6L,EAAE,EAAE,EAAG;QAACW,EAAE,EAAE,EAAG;QAAAf,QAAA,eAClB/J,OAAA,CAAC5B,IAAI;UAACkM,KAAK,EAAC,oBAAoB;UAACS,KAAK,eAAE/K,OAAA,CAACvB,MAAM;YAAC+K,IAAI,eAAExJ,OAAA,CAACP,YAAY;cAAAgK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAAAG,QAAA,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAE;UAAAG,QAAA,eACvF/J,OAAA;YAAKgL,SAAS,EAAC,eAAe;YAAAjB,QAAA,EAC3BnJ,WAAW,CAAC4C,GAAG,CAACyH,QAAQ,iBACvBjL,OAAA;cAAuBgL,SAAS,EAAC,eAAe;cAACf,KAAK,EAAE;gBAAEC,YAAY,EAAE,EAAE;gBAAEgB,OAAO,EAAE,EAAE;gBAAEC,MAAM,EAAE,mBAAmB;gBAAEC,YAAY,EAAE;cAAE,CAAE;cAAArB,QAAA,gBACtI/J,OAAA;gBAAKiK,KAAK,EAAE;kBAAEoB,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE,eAAe;kBAAEC,UAAU,EAAE,QAAQ;kBAAErB,YAAY,EAAE;gBAAE,CAAE;gBAAAH,QAAA,gBACtG/J,OAAA;kBAAMiK,KAAK,EAAE;oBAAEuB,UAAU,EAAE;kBAAO,CAAE;kBAAAzB,QAAA,EAAEkB,QAAQ,CAACtH;gBAAI;kBAAA8F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC3D5J,OAAA,CAACxB,KAAK;kBACJoF,MAAM,EAAEqH,QAAQ,CAACrH,MAAM,KAAK,SAAS,GAAG,YAAY,GAC5CqH,QAAQ,CAACrH,MAAM,KAAK,WAAW,GAAG,SAAS,GAAG,SAAU;kBAChEjC,IAAI,EAAEsJ,QAAQ,CAACrH;gBAAO;kBAAA6F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN5J,OAAA,CAACpB,QAAQ;gBAAC6M,OAAO,EAAER,QAAQ,CAACpH,QAAS;gBAAC6H,IAAI,EAAC;cAAO;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrD5J,OAAA;gBAAKiK,KAAK,EAAE;kBAAE0B,QAAQ,EAAE,EAAE;kBAAEhB,KAAK,EAAE,MAAM;kBAAEiB,SAAS,EAAE;gBAAE,CAAE;gBAAA7B,QAAA,GAAC,YAC/C,EAAC,CAACkB,QAAQ,CAACnG,QAAQ,GAAG,GAAG,EAAE+G,OAAO,CAAC,CAAC,CAAC,EAAC,cACxC,EAACZ,QAAQ,CAAChH,sBAAsB,CAACC,MAAM,EAAC,aACxC,EAAC+G,QAAQ,CAAClG,gBAAgB;cAAA;gBAAA0E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC;YAAA,GAdEqB,QAAQ,CAACvH,EAAE;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAehB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEN5J,OAAA,CAAC1B,GAAG;QAAC6L,EAAE,EAAE,EAAG;QAACW,EAAE,EAAE,EAAG;QAAAf,QAAA,eAClB/J,OAAA,CAAC5B,IAAI;UAACkM,KAAK,EAAC,qBAAqB;UAACS,KAAK,eAAE/K,OAAA,CAACvB,MAAM;YAAC+K,IAAI,eAAExJ,OAAA,CAACR,kBAAkB;cAAAiK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACkC,OAAO,EAAErD,eAAgB;YAAAsB,QAAA,EAAC;UAAgB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAE;UAAAG,QAAA,eACjI/J,OAAA;YAAKiK,KAAK,EAAE;cAAEoB,OAAO,EAAE,MAAM;cAAEU,mBAAmB,EAAE,sCAAsC;cAAEC,GAAG,EAAE;YAAE,CAAE;YAAAjC,QAAA,EAClG7I,SAAS,CAACsC,GAAG,CAACsC,IAAI,iBACjB9F,OAAA;cAAwBiK,KAAK,EAAE;gBAC7BgC,UAAU,EAAEnG,IAAI,CAACa,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAGb,IAAI,CAAClC,MAAM,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;gBAClGuH,MAAM,EAAErF,IAAI,CAACa,IAAI,KAAK,QAAQ,GAAG,mBAAmB,GAAG,mBAAmB;gBAC1EuE,OAAO,EAAE,CAAC;gBAAEE,YAAY,EAAE,CAAC;gBAAEc,SAAS,EAAE,QAAQ;gBAAEP,QAAQ,EAAE;cAC9D,CAAE;cAAA5B,QAAA,gBACA/J,OAAA;gBAAKiK,KAAK,EAAE;kBAAEuB,UAAU,EAAE;gBAAO,CAAE;gBAAAzB,QAAA,EAAEjE,IAAI,CAACY;cAAO;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACxD5J,OAAA;gBAAA+J,QAAA,EAAMjE,IAAI,CAACa;cAAI;gBAAA8C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtB5J,OAAA,CAACxB,KAAK;gBAACoF,MAAM,EAAEkC,IAAI,CAAClC,MAAM,KAAK,SAAS,GAAG,SAAS,GAAG,OAAQ;gBAACjC,IAAI,EAAEmE,IAAI,CAAClC;cAAO;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACpF9D,IAAI,CAACc,cAAc,iBAAI5G,OAAA;gBAAKiK,KAAK,EAAE;kBAAEU,KAAK,EAAE,KAAK;kBAAEgB,QAAQ,EAAE;gBAAG,CAAE;gBAAA5B,QAAA,EAAC;cAAW;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAR7E9D,IAAI,CAACY,OAAO;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASjB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,MAAMuC,gBAAgB,GAAGA,CAAA,kBACvBnM,OAAA;IAAA+J,QAAA,gBACE/J,OAAA,CAAC5B,IAAI;MAACkM,KAAK,EAAC,mCAAmC;MACzCS,KAAK,eAAE/K,OAAA,CAACvB,MAAM;QAAC2N,IAAI,EAAC,SAAS;QAACN,OAAO,EAAEA,CAAA,KAAMrJ,sBAAsB,CAAC,IAAI,CAAE;QAAAsH,QAAA,EAAC;MAAe;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAE;MAAAG,QAAA,eACxG/J,OAAA,CAACrB,IAAI;QAAC0N,gBAAgB,EAAC,WAAW;QAAAtC,QAAA,gBAChC/J,OAAA,CAACI,OAAO;UAACkM,GAAG,EAAC,kBAAkB;UAAAvC,QAAA,eAC7B/J,OAAA,CAACnB,KAAK;YACJ0N,UAAU,EAAE3L,WAAY;YACxB4L,OAAO,EAAE,CACP;cAAElC,KAAK,EAAE,MAAM;cAAEmC,SAAS,EAAE,MAAM;cAAElD,GAAG,EAAE;YAAO,CAAC,EACjD;cAAEe,KAAK,EAAE,QAAQ;cAAEmC,SAAS,EAAE,QAAQ;cAAElD,GAAG,EAAE,QAAQ;cACnDmD,MAAM,EAAG9I,MAAM,iBAAK5D,OAAA,CAACxB,KAAK;gBAACoF,MAAM,EAAEA,MAAM,KAAK,SAAS,GAAG,YAAY,GAAG,SAAU;gBAACjC,IAAI,EAAEiC;cAAO;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YACrG,CAAC,EACD;cAAEU,KAAK,EAAE,UAAU;cAAEmC,SAAS,EAAE,UAAU;cAAElD,GAAG,EAAE,UAAU;cACzDmD,MAAM,EAAG7I,QAAQ,iBAAK7D,OAAA,CAACpB,QAAQ;gBAAC6M,OAAO,EAAE5H,QAAS;gBAAC6H,IAAI,EAAC;cAAO;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YACnE,CAAC,EACD;cAAEU,KAAK,EAAE,UAAU;cAAEmC,SAAS,EAAE,UAAU;cAAElD,GAAG,EAAE,UAAU;cACzDmD,MAAM,EAAGC,GAAG,IAAK,GAAG,CAACA,GAAG,GAAG,GAAG,EAAEd,OAAO,CAAC,CAAC,CAAC;YAC5C,CAAC,EACD;cAAEvB,KAAK,EAAE,YAAY;cAAEmC,SAAS,EAAE,kBAAkB;cAAElD,GAAG,EAAE;YAAa,CAAC,EACzE;cAAEe,KAAK,EAAE,SAAS;cAAEf,GAAG,EAAE,SAAS;cAChCmD,MAAM,EAAEA,CAAClG,CAAC,EAAEoG,MAAM,kBAChB5M,OAAA,CAACtB,KAAK;gBAAAqL,QAAA,gBACJ/J,OAAA,CAACvB,MAAM;kBAACiN,IAAI,EAAC,OAAO;kBAACI,OAAO,EAAEA,CAAA,KAAM1D,uBAAuB,CAACwE,MAAM,CAAClJ,EAAE,CAAE;kBAAAqG,QAAA,EAAC;gBAAQ;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACzF5J,OAAA,CAACvB,MAAM;kBAACiN,IAAI,EAAC,OAAO;kBAACU,IAAI,EAAC,SAAS;kBAACN,OAAO,EAAEA,CAAA,KAAMxD,WAAW,CAACsE,MAAM,CAAClJ,EAAE,CAAE;kBAAAqG,QAAA,EAAC;gBAAM;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrF;YAEX,CAAC,CACD;YACFiD,UAAU,EAAE;UAAM;YAAApD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC,GAzBgC,WAAW;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0BtC,CAAC,eACV5J,OAAA,CAACI,OAAO;UAACkM,GAAG,EAAC,6BAA6B;UAAAvC,QAAA,eACxC/J,OAAA;YAAA+J,QAAA,EACGnJ,WAAW,CAAC4C,GAAG,CAACyH,QAAQ,iBACvBjL,OAAA,CAAC5B,IAAI;cAAmB6L,KAAK,EAAE;gBAAEC,YAAY,EAAE;cAAG,CAAE;cAAAH,QAAA,gBAClD/J,OAAA;gBAAA+J,QAAA,EAAKkB,QAAQ,CAACtH;cAAI;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxB5J,OAAA;gBAAA+J,QAAA,GAAG,UAAQ,EAACkB,QAAQ,CAAChH,sBAAsB,CAACC,MAAM;cAAA;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvD5J,OAAA;gBAAA+J,QAAA,GAAG,cAAY,EAACkB,QAAQ,CAAChH,sBAAsB,CAACE,UAAU;cAAA;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/D5J,OAAA;gBAAA+J,QAAA,GAAG,eAAa,EAAC,CAACkB,QAAQ,CAAChH,sBAAsB,CAACM,WAAW,GAAG,GAAG,EAAEsH,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACrF5J,OAAA,CAACpB,QAAQ;gBACP6M,OAAO,EAAGR,QAAQ,CAAChH,sBAAsB,CAACE,UAAU,GAAG,GAAG,GAAI,GAAI;gBAClE2I,MAAM,EAAEA,CAAA,KAAM,GAAG7B,QAAQ,CAAChH,sBAAsB,CAACE,UAAU;cAAO;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnE,CAAC;YAAA,GAROqB,QAAQ,CAACvH,EAAE;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAShB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC,GAduC,aAAa;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAenD,CAAC,eACV5J,OAAA,CAACI,OAAO;UAACkM,GAAG,EAAC,aAAa;UAAAvC,QAAA,eACxB/J,OAAA;YAAA+J,QAAA,EACGnJ,WAAW,CAAC4J,MAAM,CAAC/G,CAAC,IAAIA,CAAC,CAACoB,gBAAgB,CAAC,CAACrB,GAAG,CAACyH,QAAQ,iBACvDjL,OAAA,CAAC5B,IAAI;cAAmB6L,KAAK,EAAE;gBAAEC,YAAY,EAAE;cAAG,CAAE;cAAAH,QAAA,gBAClD/J,OAAA;gBAAA+J,QAAA,GAAKkB,QAAQ,CAACtH,IAAI,EAAC,aAAW;cAAA;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnC5J,OAAA,CAAC3B,GAAG;gBAAC2L,MAAM,EAAE,EAAG;gBAAAD,QAAA,gBACd/J,OAAA,CAAC1B,GAAG;kBAACyO,IAAI,EAAE,EAAG;kBAAAhD,QAAA,eACZ/J,OAAA,CAAC5B,IAAI;oBAACsN,IAAI,EAAC,OAAO;oBAACpB,KAAK,EAAC,WAAW;oBAAAP,QAAA,gBAClC/J,OAAA,CAACzB,SAAS;sBAAC+L,KAAK,EAAC,iBAAiB;sBAACC,KAAK,EAAC;oBAAO;sBAAAd,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eACnD5J,OAAA,CAACzB,SAAS;sBAAC+L,KAAK,EAAC,eAAe;sBAACC,KAAK,EAAC;oBAAK;sBAAAd,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;kBAACyO,IAAI,EAAE,EAAG;kBAAAhD,QAAA,eACZ/J,OAAA,CAAC5B,IAAI;oBAACsN,IAAI,EAAC,OAAO;oBAACpB,KAAK,EAAC,WAAW;oBAAAP,QAAA,gBAClC/J,OAAA,CAACzB,SAAS;sBAAC+L,KAAK,EAAC,iBAAiB;sBAACC,KAAK,EAAC;oBAAO;sBAAAd,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eACnD5J,OAAA,CAACzB,SAAS;sBAAC+L,KAAK,EAAC,eAAe;sBAACC,KAAK,EAAC;oBAAK;sBAAAd,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACN5J,OAAA;gBAAKiK,KAAK,EAAE;kBAAE2B,SAAS,EAAE;gBAAG,CAAE;gBAAA7B,QAAA,eAC5B/J,OAAA,CAACxB,KAAK;kBAACoF,MAAM,EAAC,SAAS;kBAACjC,IAAI,EAAC;gBAA+B;kBAAA8H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC;YAAA,GAlBGqB,QAAQ,CAACvH,EAAE;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmBhB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC,GAxBuB,WAAW;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyBjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGP5J,OAAA,CAACf,KAAK;MAACqL,KAAK,EAAC,wBAAwB;MAAC0C,IAAI,EAAExK,mBAAoB;MAACyK,QAAQ,EAAEA,CAAA,KAAMxK,sBAAsB,CAAC,KAAK,CAAE;MAACyK,MAAM,EAAE,IAAK;MAAAnD,QAAA,eAC3H/J,OAAA,CAAClB,IAAI;QAACqO,QAAQ,EAAExF,cAAe;QAACyF,MAAM,EAAC,UAAU;QAAArD,QAAA,gBAC/C/J,OAAA,CAAClB,IAAI,CAACuO,IAAI;UAAC1J,IAAI,EAAC,MAAM;UAACkG,KAAK,EAAC,eAAe;UAACyD,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAK,CAAC,CAAE;UAAAxD,QAAA,eACvE/J,OAAA,CAACjB,KAAK;YAACyO,WAAW,EAAC;UAAqB;YAAA/D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACZ5J,OAAA,CAAClB,IAAI,CAACuO,IAAI;UAAC1J,IAAI,EAAC,SAAS;UAACkG,KAAK,EAAC,SAAS;UAACyD,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAK,CAAC,CAAE;UAAAxD,QAAA,eACpE/J,OAAA,CAAChB,MAAM;YAACwO,WAAW,EAAC,gBAAgB;YAAAzD,QAAA,gBAClC/J,OAAA,CAACK,MAAM;cAACkK,KAAK,EAAC,eAAe;cAAAR,QAAA,EAAC;YAAsB;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC7D5J,OAAA,CAACK,MAAM;cAACkK,KAAK,EAAC,eAAe;cAAAR,QAAA,EAAC;YAAuB;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9D5J,OAAA,CAACK,MAAM;cAACkK,KAAK,EAAC,wBAAwB;cAAAR,QAAA,EAAC;YAAsB;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACZ5J,OAAA,CAAClB,IAAI,CAACuO,IAAI;UAAC1J,IAAI,EAAC,WAAW;UAACkG,KAAK,EAAC,WAAW;UAACyD,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAK,CAAC,CAAE;UAAAxD,QAAA,eACxE/J,OAAA,CAAChB,MAAM;YAACwO,WAAW,EAAC,kBAAkB;YAAAzD,QAAA,gBACpC/J,OAAA,CAACK,MAAM;cAACkK,KAAK,EAAC,eAAe;cAAAR,QAAA,EAAC;YAAa;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpD5J,OAAA,CAACK,MAAM;cAACkK,KAAK,EAAC,SAAS;cAAAR,QAAA,EAAC;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxC5J,OAAA,CAACK,MAAM;cAACkK,KAAK,EAAC,gBAAgB;cAAAR,QAAA,EAAC;YAAc;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACZ5J,OAAA,CAAClB,IAAI,CAACuO,IAAI;UAAAtD,QAAA,eACR/J,OAAA,CAACvB,MAAM;YAAC2N,IAAI,EAAC,SAAS;YAACqB,QAAQ,EAAC,QAAQ;YAAA1D,QAAA,EAAC;UAAe;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACN;EAED,MAAM8D,oBAAoB,GAAGA,CAAA,kBAC3B1N,OAAA;IAAA+J,QAAA,eACE/J,OAAA,CAAC5B,IAAI;MAACkM,KAAK,EAAC,2CAA2C;MAAAP,QAAA,eACrD/J,OAAA,CAAC3B,GAAG;QAAC2L,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;QAAAD,QAAA,gBACpB/J,OAAA,CAAC1B,GAAG;UAAC6L,EAAE,EAAE,EAAG;UAACW,EAAE,EAAE,EAAG;UAAAf,QAAA,eAClB/J,OAAA,CAAC5B,IAAI;YAACkM,KAAK,EAAC,uBAAuB;YAACU,SAAS,EAAC,aAAa;YAAAjB,QAAA,eACzD/J,OAAA;cAAKiK,KAAK,EAAE;gBAAEoB,OAAO,EAAE,MAAM;gBAAEU,mBAAmB,EAAE,sCAAsC;gBAAEC,GAAG,EAAE;cAAG,CAAE;cAAAjC,QAAA,EACnGrJ,OAAO,gBAAGV,OAAA;gBAAA+J,QAAA,EAAK;cAAU;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,GAC9B1I,SAAS,CAACsC,GAAG,CAACsC,IAAI,iBAChB9F,OAAA,CAAC5B,IAAI;gBAAoBsN,IAAI,EAAC,OAAO;gBAC/BzB,KAAK,EAAE;kBACLgC,UAAU,EAAEnG,IAAI,CAACa,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAGb,IAAI,CAAClC,MAAM,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;kBAClGuH,MAAM,EAAErF,IAAI,CAACa,IAAI,KAAK,QAAQ,GAAG,mBAAmB,GAAG;gBACzD,CAAE;gBAAAoD,QAAA,eACN/J,OAAA;kBAAKiK,KAAK,EAAE;oBAAEiC,SAAS,EAAE;kBAAS,CAAE;kBAAAnC,QAAA,gBAClC/J,OAAA;oBAAKiK,KAAK,EAAE;sBAAEuB,UAAU,EAAE;oBAAO,CAAE;oBAAAzB,QAAA,EAAEjE,IAAI,CAACY;kBAAO;oBAAA+C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACxD5J,OAAA;oBAAA+J,QAAA,EAAMjE,IAAI,CAACa;kBAAI;oBAAA8C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACtB5J,OAAA,CAACxB,KAAK;oBAACoF,MAAM,EAAEkC,IAAI,CAAClC,MAAM,KAAK,SAAS,GAAG,SAAS,GAAG,OAAQ;oBAACjC,IAAI,EAAEmE,IAAI,CAAClC;kBAAO;oBAAA6F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,EACpF9D,IAAI,CAACc,cAAc,iBAAI5G,OAAA;oBAAKiK,KAAK,EAAE;sBAAEU,KAAK,EAAE,KAAK;sBAAEgB,QAAQ,EAAE;oBAAG,CAAE;oBAAA5B,QAAA,EAAC;kBAAW;oBAAAN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EACpF9D,IAAI,CAACxE,kBAAkB,iBACtBtB,OAAA;oBAAKiK,KAAK,EAAE;sBAAE0B,QAAQ,EAAE,EAAE;sBAAEC,SAAS,EAAE;oBAAE,CAAE;oBAAA7B,QAAA,gBACzC/J,OAAA;sBAAA+J,QAAA,GAAK,cAAY,EAACjE,IAAI,CAACxE,kBAAkB,CAAC6E,UAAU,EAAC,IAAE;oBAAA;sBAAAsD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC7D5J,OAAA;sBAAA+J,QAAA,GAAK,WAAS,EAACjE,IAAI,CAACxE,kBAAkB,CAAC8E,OAAO,EAAC,IAAE;oBAAA;sBAAAqD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpD,CACN,eACD5J,OAAA,CAACvB,MAAM;oBAACiN,IAAI,EAAC,OAAO;oBAACiC,MAAM;oBAAC1D,KAAK,EAAE;sBAAE2B,SAAS,EAAE;oBAAE,CAAE;oBAC5CE,OAAO,EAAEA,CAAA,KAAMpD,aAAa,CAAC5C,IAAI,CAACY,OAAO,CAAE;oBAAAqD,QAAA,EAAC;kBAEpD;oBAAAN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN;cAAC,GApBG9D,IAAI,CAACY,OAAO;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAqBjB,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAED;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;UAAC6L,EAAE,EAAE,EAAG;UAACW,EAAE,EAAE,CAAE;UAAAf,QAAA,gBACjB/J,OAAA,CAAC5B,IAAI;YAACkM,KAAK,EAAC,UAAU;YAAAP,QAAA,eACpB/J,OAAA,CAACtB,KAAK;cAACkP,SAAS,EAAC,UAAU;cAAC3D,KAAK,EAAE;gBAAE4D,KAAK,EAAE;cAAO,CAAE;cAAA9D,QAAA,gBACnD/J,OAAA,CAACvB,MAAM;gBAACqP,KAAK;gBAACtE,IAAI,eAAExJ,OAAA,CAACR,kBAAkB;kBAAAiK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAACkC,OAAO,EAAErD,eAAgB;gBAAAsB,QAAA,EAAC;cAEtE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT5J,OAAA,CAACvB,MAAM;gBAACqP,KAAK;gBAACtE,IAAI,eAAExJ,OAAA,CAACL,mBAAmB;kBAAA8J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAACkC,OAAO,EAAElD,OAAQ;gBAAAmB,QAAA,EAAC;cAE/D;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT5J,OAAA,CAACvB,MAAM;gBAACqP,KAAK;gBAACtE,IAAI,eAAExJ,OAAA,CAACN,kBAAkB;kBAAA+J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAACkC,OAAO,EAAEjD,oBAAqB;gBAAAkB,QAAA,EAAC;cAE3E;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT5J,OAAA,CAACvB,MAAM;gBAACqP,KAAK;gBAACtE,IAAI,eAAExJ,OAAA,CAACH,aAAa;kBAAA4J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAACkC,OAAO,EAAEA,CAAA,KAAMpD,aAAa,CAAC,QAAQ,CAAE;gBAAAqB,QAAA,EAAC;cAE/E;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAEP5J,OAAA,CAAC5B,IAAI;YAACkM,KAAK,EAAC,qBAAqB;YAACL,KAAK,EAAE;cAAE2B,SAAS,EAAE;YAAG,CAAE;YAAA7B,QAAA,gBACzD/J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,gBAAgB;cAACC,KAAK,EAAEjJ,kBAAkB,CAAC+E,aAAa,IAAI,GAAI;cAACwE,MAAM,EAAC;YAAI;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChG5J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,YAAY;cAACC,KAAK,EAAEjJ,kBAAkB,CAAC6E,UAAU,IAAI,GAAI;cAAC0E,MAAM,EAAC;YAAO;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5F5J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,iBAAiB;cAACC,KAAK,EAAEjJ,kBAAkB,CAAC8E,OAAO,IAAI,EAAG;cAACyE,MAAM,EAAC;YAAI;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CACN;EAED,MAAMmE,aAAa,GAAGA,CAAA,kBACpB/N,OAAA;IAAA+J,QAAA,eACE/J,OAAA,CAAC5B,IAAI;MAACkM,KAAK,EAAC,gCAAgC;MAAAP,QAAA,eAC1C/J,OAAA,CAAC3B,GAAG;QAAC2L,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;QAAAD,QAAA,gBACpB/J,OAAA,CAAC1B,GAAG;UAAC6L,EAAE,EAAE,EAAG;UAACW,EAAE,EAAE,EAAG;UAAAf,QAAA,eAClB/J,OAAA,CAAC5B,IAAI;YAACkM,KAAK,EAAC,gBAAgB;YAACU,SAAS,EAAC,gBAAgB;YAAAjB,QAAA,gBACrD/J,OAAA;cAAKiK,KAAK,EAAE;gBACV+D,SAAS,EAAE,GAAG;gBACdC,SAAS,EAAE,GAAG;gBACdC,SAAS,EAAE,MAAM;gBACjBhE,YAAY,EAAE,EAAE;gBAChBgB,OAAO,EAAE,EAAE;gBACXe,UAAU,EAAE,SAAS;gBACrBb,YAAY,EAAE;cAChB,CAAE;cAAArB,QAAA,EACCvI,YAAY,CAACgC,GAAG,CAAC,CAAC2K,GAAG,EAAEC,GAAG,kBACzBpO,OAAA;gBAAeiK,KAAK,EAAE;kBACpBiC,SAAS,EAAEiC,GAAG,CAACzM,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;kBACnD2M,MAAM,EAAE;gBACV,CAAE;gBAAAtE,QAAA,eACA/J,OAAA;kBAAKiK,KAAK,EAAE;oBACVoB,OAAO,EAAE,cAAc;oBACvBY,UAAU,EAAEkC,GAAG,CAACzM,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;oBACzDiJ,KAAK,EAAEwD,GAAG,CAACzM,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO;oBAChDwJ,OAAO,EAAE,UAAU;oBACnBE,YAAY,EAAE,EAAE;oBAChBkD,QAAQ,EAAE;kBACZ,CAAE;kBAAAvE,QAAA,EACCoE,GAAG,CAACxM;gBAAI;kBAAA8H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN;cAAC,GAbEwE,GAAG;gBAAA3E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAcR,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN5J,OAAA;cAAKiK,KAAK,EAAE;gBAAEoB,OAAO,EAAE,MAAM;gBAAEW,GAAG,EAAE;cAAE,CAAE;cAAAjC,QAAA,gBACtC/J,OAAA,CAACjB,KAAK;gBACJwL,KAAK,EAAE3I,SAAU;gBACjB2M,QAAQ,EAAEtJ,CAAC,IAAIpD,YAAY,CAACoD,CAAC,CAACuJ,MAAM,CAACjE,KAAK,CAAE;gBAC5CkE,YAAY,EAAE3F,WAAY;gBAC1B0E,WAAW,EAAC,gEAAgE;gBAC5EkB,QAAQ,EAAE5M;cAAY;gBAAA2H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB,CAAC,eACF5J,OAAA,CAACvB,MAAM;gBAAC2N,IAAI,EAAC,SAAS;gBAACN,OAAO,EAAEhD,WAAY;gBAACpI,OAAO,EAAEoB,WAAY;gBAAAiI,QAAA,EAAC;cAEnE;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAEN5J,OAAA;cAAKiK,KAAK,EAAE;gBAAE2B,SAAS,EAAE;cAAG,CAAE;cAAA7B,QAAA,gBAC5B/J,OAAA;gBAAMiK,KAAK,EAAE;kBAAE0E,WAAW,EAAE;gBAAE,CAAE;gBAAA5E,QAAA,EAAC;cAAc;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtD5J,OAAA,CAACtB,KAAK;gBAACkQ,IAAI;gBAAA7E,QAAA,gBACT/J,OAAA,CAACvB,MAAM;kBAACiN,IAAI,EAAC,OAAO;kBAACI,OAAO,EAAEA,CAAA,KAAM1C,gBAAgB,CAAC,QAAQ,CAAE;kBAAAW,QAAA,EAAC;gBAEhE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT5J,OAAA,CAACvB,MAAM;kBAACiN,IAAI,EAAC,OAAO;kBAACI,OAAO,EAAEA,CAAA,KAAM1C,gBAAgB,CAAC,UAAU,CAAE;kBAAAW,QAAA,EAAC;gBAElE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT5J,OAAA,CAACvB,MAAM;kBAACiN,IAAI,EAAC,OAAO;kBAACI,OAAO,EAAEA,CAAA,KAAM1C,gBAAgB,CAAC,QAAQ,CAAE;kBAAAW,QAAA,EAAC;gBAEhE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEN5J,OAAA,CAAC1B,GAAG;UAAC6L,EAAE,EAAE,EAAG;UAACW,EAAE,EAAE,CAAE;UAAAf,QAAA,gBACjB/J,OAAA,CAAC5B,IAAI;YAACkM,KAAK,EAAC,uBAAuB;YAAAP,QAAA,gBACjC/J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,eAAe;cAACC,KAAK,EAAEvI,aAAa,CAACuF,YAAY,IAAI;YAAE;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3E5J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,YAAY;cAACC,KAAK,EAAEvI,aAAa,CAACwF,UAAU,IAAI;YAAI;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxE5J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,YAAY;cAACC,KAAK,EAAEvI,aAAa,CAACyF,SAAS,IAAI;YAAQ;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3E5J,OAAA,CAACzB,SAAS;cAAC+L,KAAK,EAAC,eAAe;cAACC,KAAK,EAAEvI,aAAa,CAAC0F,YAAY,IAAI,EAAG;cAACmD,MAAM,EAAC;YAAI;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC,eAEP5J,OAAA,CAAC5B,IAAI;YAACkM,KAAK,EAAC,mBAAmB;YAACL,KAAK,EAAE;cAAE2B,SAAS,EAAE;YAAG,CAAE;YAAA7B,QAAA,eACvD/J,OAAA;cAAA+J,QAAA,gBACE/J,OAAA;gBAAA+J,QAAA,gBAAG/J,OAAA;kBAAA+J,QAAA,EAAQ;gBAAU;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,wBAAoB;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACtD5J,OAAA;gBAAA+J,QAAA,gBAAG/J,OAAA;kBAAA+J,QAAA,EAAQ;gBAAW;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,gBAAY;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAC/C5J,OAAA;gBAAA+J,QAAA,gBAAG/J,OAAA;kBAAA+J,QAAA,EAAQ;gBAAe;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,iBAAa;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACpD5J,OAAA;gBAAA+J,QAAA,gBAAG/J,OAAA;kBAAA+J,QAAA,EAAQ;gBAAqB;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,QAAI;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CACN;EAED,MAAMiF,gBAAgB,GAAGA,CAAA,kBACvB7O,OAAA;IAAA+J,QAAA,eACE/J,OAAA,CAAC5B,IAAI;MAACkM,KAAK,EAAC,iCAAiC;MAAAP,QAAA,eAC3C/J,OAAA,CAACrB,IAAI;QAAC0N,gBAAgB,EAAC,SAAS;QAAAtC,QAAA,gBAC9B/J,OAAA,CAACI,OAAO;UAACkM,GAAG,EAAC,oBAAoB;UAAAvC,QAAA,eAC/B/J,OAAA,CAAC3B,GAAG;YAAC2L,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;YAAAD,QAAA,gBACpB/J,OAAA,CAAC1B,GAAG;cAAC6L,EAAE,EAAE,EAAG;cAACE,EAAE,EAAE,CAAE;cAAAN,QAAA,eACjB/J,OAAA,CAAC5B,IAAI;gBAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;kBAAC+L,KAAK,EAAC,cAAc;kBAACC,KAAK,EAAE,IAAK;kBAACE,MAAM,eAAEzK,OAAA,CAACV,gBAAgB;oBAAAmK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAE;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;cAAC6L,EAAE,EAAE,EAAG;cAACE,EAAE,EAAE,CAAE;cAAAN,QAAA,eACjB/J,OAAA,CAAC5B,IAAI;gBAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;kBAAC+L,KAAK,EAAC,YAAY;kBAACC,KAAK,EAAE,GAAI;kBAACM,MAAM,EAAC,GAAG;kBAACH,UAAU,EAAE;oBAAEC,KAAK,EAAE;kBAAU;gBAAE;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN5J,OAAA,CAAC1B,GAAG;cAAC6L,EAAE,EAAE,EAAG;cAACE,EAAE,EAAE,CAAE;cAAAN,QAAA,eACjB/J,OAAA,CAAC5B,IAAI;gBAAA2L,QAAA,eACH/J,OAAA,CAACzB,SAAS;kBAAC+L,KAAK,EAAC,mBAAmB;kBAACC,KAAK,EAAE,GAAI;kBAACM,MAAM,EAAC;gBAAI;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAjB8B,SAAS;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBtC,CAAC,eAEV5J,OAAA,CAACI,OAAO;UAACkM,GAAG,EAAC,sBAAsB;UAAAvC,QAAA,eACjC/J,OAAA,CAACnB,KAAK;YACJ0N,UAAU,EAAE,CACV;cAAE7I,EAAE,EAAE,CAAC;cAAEoL,SAAS,EAAE,uBAAuB;cAAEC,QAAQ,EAAE,MAAM;cAAEnL,MAAM,EAAE;YAAU,CAAC,EAClF;cAAEF,EAAE,EAAE,CAAC;cAAEoL,SAAS,EAAE,gBAAgB;cAAEC,QAAQ,EAAE,MAAM;cAAEnL,MAAM,EAAE;YAAU,CAAC,EAC3E;cAAEF,EAAE,EAAE,CAAC;cAAEoL,SAAS,EAAE,eAAe;cAAEC,QAAQ,EAAE,MAAM;cAAEnL,MAAM,EAAE;YAAU,CAAC,CAC1E;YACF4I,OAAO,EAAE,CACP;cAAElC,KAAK,EAAE,WAAW;cAAEmC,SAAS,EAAE,WAAW;cAAElD,GAAG,EAAE;YAAY,CAAC,EAChE;cAAEe,KAAK,EAAE,UAAU;cAAEmC,SAAS,EAAE,UAAU;cAAElD,GAAG,EAAE;YAAW,CAAC,EAC7D;cAAEe,KAAK,EAAE,QAAQ;cAAEmC,SAAS,EAAE,QAAQ;cAAElD,GAAG,EAAE,QAAQ;cACnDmD,MAAM,EAAG9I,MAAM,iBAAK5D,OAAA,CAACxB,KAAK;gBAACoF,MAAM,EAAC,SAAS;gBAACjC,IAAI,EAAEiC;cAAO;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAC7D,CAAC;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAdoC,QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAevC,CAAC,eAEV5J,OAAA,CAACI,OAAO;UAACkM,GAAG,EAAC,QAAQ;UAAAvC,QAAA,eACnB/J,OAAA;YAAA+J,QAAA,EACG3H,UAAU,CAACmB,MAAM,KAAK,CAAC,gBACtBvD,OAAA;cAAKiK,KAAK,EAAE;gBAAEiC,SAAS,EAAE,QAAQ;gBAAEhB,OAAO,EAAE;cAAG,CAAE;cAAAnB,QAAA,gBAC/C/J,OAAA,CAACH,aAAa;gBAACoK,KAAK,EAAE;kBAAE0B,QAAQ,EAAE,EAAE;kBAAEhB,KAAK,EAAE;gBAAU;cAAE;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5D5J,OAAA;gBAAA+J,QAAA,EAAI;cAAgB;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzB5J,OAAA;gBAAA+J,QAAA,EAAG;cAA8B;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,GAENxH,UAAU,CAACoB,GAAG,CAACwL,KAAK,iBAClBhP,OAAA,CAAC5B,IAAI;cAAgB6L,KAAK,EAAE;gBAAEC,YAAY,EAAE;cAAG,CAAE;cAAAH,QAAA,gBAC/C/J,OAAA;gBAAA+J,QAAA,EAAKiF,KAAK,CAAC1E;cAAK;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtB5J,OAAA;gBAAA+J,QAAA,EAAIiF,KAAK,CAACC;cAAW;gBAAAxF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1B5J,OAAA,CAACxB,KAAK;gBAACoF,MAAM,EAAC,OAAO;gBAACjC,IAAI,EAAEqN,KAAK,CAACE;cAAS;gBAAAzF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GAHrCoF,KAAK,CAACtL,EAAE;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIb,CACP;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC,GAjBkB,QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CACN;EAED,MAAMuF,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQ3O,WAAW;MACjB,KAAK,WAAW;QACd,OAAOsJ,eAAe,CAAC,CAAC;MAC1B,KAAK,aAAa;QAChB,OAAOqC,gBAAgB,CAAC,CAAC;MAC3B,KAAK,aAAa;QAChB,OAAOuB,oBAAoB,CAAC,CAAC;MAC/B,KAAK,SAAS;QACZ,OAAOK,aAAa,CAAC,CAAC;MACxB,KAAK,YAAY;QACf,OAAOc,gBAAgB,CAAC,CAAC;MAC3B;QACE,oBAAO7O,OAAA;UAAA+J,QAAA,EAAK;QAAc;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IACpC;EACF,CAAC;EAED,oBACE5J,OAAA,CAAC9B,MAAM;IAAC+L,KAAK,EAAE;MAAE+D,SAAS,EAAE;IAAQ,CAAE;IAAAjE,QAAA,gBACpC/J,OAAA,CAACC,MAAM;MAACgK,KAAK,EAAE;QAAEgC,UAAU,EAAE,SAAS;QAAEf,OAAO,EAAE;MAAS,CAAE;MAAAnB,QAAA,eAC1D/J,OAAA;QAAKiK,KAAK,EAAE;UAAEU,KAAK,EAAE,OAAO;UAAEgB,QAAQ,EAAE,EAAE;UAAEH,UAAU,EAAE;QAAO,CAAE;QAAAzB,QAAA,EAAC;MAElE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACT5J,OAAA,CAAC9B,MAAM;MAAA6L,QAAA,gBACL/J,OAAA,CAACG,KAAK;QAAC0N,KAAK,EAAE,GAAI;QAAC5D,KAAK,EAAE;UAAEgC,UAAU,EAAE;QAAO,CAAE;QAAAlC,QAAA,eAC/C/J,OAAA,CAAC7B,IAAI;UACHiR,IAAI,EAAC,QAAQ;UACbC,YAAY,EAAE,CAAC7O,WAAW,CAAE;UAC5ByJ,KAAK,EAAE;YAAEqF,MAAM,EAAE,MAAM;YAAEC,WAAW,EAAE;UAAE,CAAE;UAC1CC,KAAK,EAAElG,SAAU;UACjBwC,OAAO,EAAEA,CAAC;YAAEvC;UAAI,CAAC,KAAK9I,cAAc,CAAC8I,GAAG;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR5J,OAAA,CAAC9B,MAAM;QAAC+L,KAAK,EAAE;UAAEiB,OAAO,EAAE;QAAO,CAAE;QAAAnB,QAAA,eACjC/J,OAAA,CAACE,OAAO;UAAC+J,KAAK,EAAE;YAAEiB,OAAO,EAAE,EAAE;YAAEmD,MAAM,EAAE,CAAC;YAAEL,SAAS,EAAE,GAAG;YAAE/B,UAAU,EAAE,MAAM;YAAEb,YAAY,EAAE;UAAE,CAAE;UAAArB,QAAA,EAC7FoF,aAAa,CAAC;QAAC;UAAA1F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACrJ,EAAA,CAnzBQD,GAAG;AAAAmP,EAAA,GAAHnP,GAAG;AAqzBZ,eAAeA,GAAG;AAAC,IAAAmP,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}